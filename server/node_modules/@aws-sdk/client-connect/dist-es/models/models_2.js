import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { ConnectServiceException as __BaseException } from "./ConnectServiceException";
import { UserIdentityInfoFilterSensitiveLog, ViewFilterSensitiveLog, ViewInputContentFilterSensitiveLog, } from "./models_0";
import { SearchCriteriaFilterSensitiveLog, } from "./models_1";
export const SearchContactsTimeRangeType = {
    CONNECTED_TO_AGENT_TIMESTAMP: "CONNECTED_TO_AGENT_TIMESTAMP",
    DISCONNECT_TIMESTAMP: "DISCONNECT_TIMESTAMP",
    INITIATION_TIMESTAMP: "INITIATION_TIMESTAMP",
    SCHEDULED_TIMESTAMP: "SCHEDULED_TIMESTAMP",
};
export const StringComparisonType = {
    CONTAINS: "CONTAINS",
    EXACT: "EXACT",
    STARTS_WITH: "STARTS_WITH",
};
export const SearchableQueueType = {
    STANDARD: "STANDARD",
};
export class MaximumResultReturnedException extends __BaseException {
    constructor(opts) {
        super({
            name: "MaximumResultReturnedException",
            $fault: "client",
            ...opts,
        });
        this.name = "MaximumResultReturnedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MaximumResultReturnedException.prototype);
        this.Message = opts.Message;
    }
}
export const HierarchyGroupMatchType = {
    EXACT: "EXACT",
    WITH_CHILD_GROUPS: "WITH_CHILD_GROUPS",
};
export const ChatEventType = {
    DISCONNECT: "DISCONNECT",
    EVENT: "EVENT",
    MESSAGE: "MESSAGE",
};
export const VoiceRecordingTrack = {
    ALL: "ALL",
    FROM_AGENT: "FROM_AGENT",
    TO_AGENT: "TO_AGENT",
};
export class DestinationNotAllowedException extends __BaseException {
    constructor(opts) {
        super({
            name: "DestinationNotAllowedException",
            $fault: "client",
            ...opts,
        });
        this.name = "DestinationNotAllowedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DestinationNotAllowedException.prototype);
        this.Message = opts.Message;
    }
}
export class OutboundContactNotPermittedException extends __BaseException {
    constructor(opts) {
        super({
            name: "OutboundContactNotPermittedException",
            $fault: "client",
            ...opts,
        });
        this.name = "OutboundContactNotPermittedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OutboundContactNotPermittedException.prototype);
        this.Message = opts.Message;
    }
}
export const TrafficType = {
    CAMPAIGN: "CAMPAIGN",
    GENERAL: "GENERAL",
};
export const MeetingFeatureStatus = {
    AVAILABLE: "AVAILABLE",
    UNAVAILABLE: "UNAVAILABLE",
};
export class ContactNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ContactNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ContactNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ContactNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export const TimerEligibleParticipantRoles = {
    AGENT: "AGENT",
    CUSTOMER: "CUSTOMER",
};
export const ParticipantTimerType = {
    DISCONNECT_NONCUSTOMER: "DISCONNECT_NONCUSTOMER",
    IDLE: "IDLE",
};
export const ParticipantTimerAction = {
    Unset: "Unset",
};
export var ParticipantTimerValue;
(function (ParticipantTimerValue) {
    ParticipantTimerValue.visit = (value, visitor) => {
        if (value.ParticipantTimerAction !== undefined)
            return visitor.ParticipantTimerAction(value.ParticipantTimerAction);
        if (value.ParticipantTimerDurationInMinutes !== undefined)
            return visitor.ParticipantTimerDurationInMinutes(value.ParticipantTimerDurationInMinutes);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(ParticipantTimerValue || (ParticipantTimerValue = {}));
export var UpdateParticipantRoleConfigChannelInfo;
(function (UpdateParticipantRoleConfigChannelInfo) {
    UpdateParticipantRoleConfigChannelInfo.visit = (value, visitor) => {
        if (value.Chat !== undefined)
            return visitor.Chat(value.Chat);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(UpdateParticipantRoleConfigChannelInfo || (UpdateParticipantRoleConfigChannelInfo = {}));
export var EvaluationFormItem;
(function (EvaluationFormItem) {
    EvaluationFormItem.visit = (value, visitor) => {
        if (value.Section !== undefined)
            return visitor.Section(value.Section);
        if (value.Question !== undefined)
            return visitor.Question(value.Question);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(EvaluationFormItem || (EvaluationFormItem = {}));
export const SearchContactsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SearchCriteria && { SearchCriteria: SearchCriteriaFilterSensitiveLog(obj.SearchCriteria) }),
});
export const UserIdentityInfoLiteFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FirstName && { FirstName: SENSITIVE_STRING }),
    ...(obj.LastName && { LastName: SENSITIVE_STRING }),
});
export const UserSearchSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.IdentityInfo && { IdentityInfo: UserIdentityInfoLiteFilterSensitiveLog(obj.IdentityInfo) }),
});
export const SearchUsersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Users && { Users: obj.Users.map((item) => UserSearchSummaryFilterSensitiveLog(item)) }),
});
export const StartOutboundVoiceContactRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Name && { Name: SENSITIVE_STRING }),
    ...(obj.Description && { Description: SENSITIVE_STRING }),
});
export const StartTaskContactRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Name && { Name: SENSITIVE_STRING }),
    ...(obj.Description && { Description: SENSITIVE_STRING }),
});
export const StartWebRTCContactRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Description && { Description: SENSITIVE_STRING }),
});
export const AttendeeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.JoinToken && { JoinToken: SENSITIVE_STRING }),
});
export const ConnectionDataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attendee && { Attendee: AttendeeFilterSensitiveLog(obj.Attendee) }),
});
export const StartWebRTCContactResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ConnectionData && { ConnectionData: ConnectionDataFilterSensitiveLog(obj.ConnectionData) }),
});
export const UpdateContactRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Name && { Name: SENSITIVE_STRING }),
    ...(obj.Description && { Description: SENSITIVE_STRING }),
});
export const UpdateUserIdentityInfoRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.IdentityInfo && { IdentityInfo: UserIdentityInfoFilterSensitiveLog(obj.IdentityInfo) }),
});
export const UpdateViewContentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Content && { Content: ViewInputContentFilterSensitiveLog(obj.Content) }),
});
export const UpdateViewContentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.View && { View: ViewFilterSensitiveLog(obj.View) }),
});
export const UpdateViewMetadataRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Name && { Name: SENSITIVE_STRING }),
});
