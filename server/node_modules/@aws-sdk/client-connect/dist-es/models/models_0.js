import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { ConnectServiceException as __BaseException } from "./ConnectServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export const ActionType = {
    ASSIGN_CONTACT_CATEGORY: "ASSIGN_CONTACT_CATEGORY",
    CREATE_CASE: "CREATE_CASE",
    CREATE_TASK: "CREATE_TASK",
    END_ASSOCIATED_TASKS: "END_ASSOCIATED_TASKS",
    GENERATE_EVENTBRIDGE_EVENT: "GENERATE_EVENTBRIDGE_EVENT",
    SEND_NOTIFICATION: "SEND_NOTIFICATION",
    SUBMIT_AUTO_EVALUATION: "SUBMIT_AUTO_EVALUATION",
    UPDATE_CASE: "UPDATE_CASE",
};
export class InternalServiceException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServiceException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServiceException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServiceException.prototype);
        this.Message = opts.Message;
    }
}
export class InvalidParameterException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceConflictException.prototype);
        this.Message = opts.Message;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.Message = opts.Message;
    }
}
export const AgentAvailabilityTimer = {
    TIME_SINCE_LAST_ACTIVITY: "TIME_SINCE_LAST_ACTIVITY",
    TIME_SINCE_LAST_INBOUND: "TIME_SINCE_LAST_INBOUND",
};
export const ContactState = {
    CONNECTED: "CONNECTED",
    CONNECTED_ONHOLD: "CONNECTED_ONHOLD",
    CONNECTING: "CONNECTING",
    ENDED: "ENDED",
    ERROR: "ERROR",
    INCOMING: "INCOMING",
    MISSED: "MISSED",
    PENDING: "PENDING",
    REJECTED: "REJECTED",
};
export const Channel = {
    CHAT: "CHAT",
    TASK: "TASK",
    VOICE: "VOICE",
};
export const ContactInitiationMethod = {
    API: "API",
    CALLBACK: "CALLBACK",
    DISCONNECT: "DISCONNECT",
    EXTERNAL_OUTBOUND: "EXTERNAL_OUTBOUND",
    INBOUND: "INBOUND",
    MONITOR: "MONITOR",
    OUTBOUND: "OUTBOUND",
    QUEUE_TRANSFER: "QUEUE_TRANSFER",
    TRANSFER: "TRANSFER",
};
export const AgentStatusState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const AgentStatusType = {
    CUSTOM: "CUSTOM",
    OFFLINE: "OFFLINE",
    ROUTABLE: "ROUTABLE",
};
export const VideoCapability = {
    SEND: "SEND",
};
export const MonitorCapability = {
    BARGE: "BARGE",
    SILENT_MONITOR: "SILENT_MONITOR",
};
export class InvalidRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestException.prototype);
        this.Message = opts.Message;
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.Message = opts.Message;
    }
}
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
export const VocabularyLanguageCode = {
    AR_AE: "ar-AE",
    DE_CH: "de-CH",
    DE_DE: "de-DE",
    EN_AB: "en-AB",
    EN_AU: "en-AU",
    EN_GB: "en-GB",
    EN_IE: "en-IE",
    EN_IN: "en-IN",
    EN_NZ: "en-NZ",
    EN_US: "en-US",
    EN_WL: "en-WL",
    EN_ZA: "en-ZA",
    ES_ES: "es-ES",
    ES_US: "es-US",
    FR_CA: "fr-CA",
    FR_FR: "fr-FR",
    HI_IN: "hi-IN",
    IT_IT: "it-IT",
    JA_JP: "ja-JP",
    KO_KR: "ko-KR",
    PT_BR: "pt-BR",
    PT_PT: "pt-PT",
    ZH_CN: "zh-CN",
};
export const FlowAssociationResourceType = {
    SMS_PHONE_NUMBER: "SMS_PHONE_NUMBER",
};
export const InstanceStorageResourceType = {
    AGENT_EVENTS: "AGENT_EVENTS",
    ATTACHMENTS: "ATTACHMENTS",
    CALL_RECORDINGS: "CALL_RECORDINGS",
    CHAT_TRANSCRIPTS: "CHAT_TRANSCRIPTS",
    CONTACT_EVALUATIONS: "CONTACT_EVALUATIONS",
    CONTACT_TRACE_RECORDS: "CONTACT_TRACE_RECORDS",
    MEDIA_STREAMS: "MEDIA_STREAMS",
    REAL_TIME_CONTACT_ANALYSIS_CHAT_SEGMENTS: "REAL_TIME_CONTACT_ANALYSIS_CHAT_SEGMENTS",
    REAL_TIME_CONTACT_ANALYSIS_SEGMENTS: "REAL_TIME_CONTACT_ANALYSIS_SEGMENTS",
    REAL_TIME_CONTACT_ANALYSIS_VOICE_SEGMENTS: "REAL_TIME_CONTACT_ANALYSIS_VOICE_SEGMENTS",
    SCHEDULED_REPORTS: "SCHEDULED_REPORTS",
    SCREEN_RECORDINGS: "SCREEN_RECORDINGS",
};
export const EncryptionType = {
    KMS: "KMS",
};
export const StorageType = {
    KINESIS_FIREHOSE: "KINESIS_FIREHOSE",
    KINESIS_STREAM: "KINESIS_STREAM",
    KINESIS_VIDEO_STREAM: "KINESIS_VIDEO_STREAM",
    S3: "S3",
};
export const ListFlowAssociationResourceType = {
    VOICE_PHONE_NUMBER: "VOICE_PHONE_NUMBER",
};
export const EndpointType = {
    CONTACT_FLOW: "CONTACT_FLOW",
    TELEPHONE_NUMBER: "TELEPHONE_NUMBER",
    VOIP: "VOIP",
};
export const FailureReasonCode = {
    IDEMPOTENCY_EXCEPTION: "IDEMPOTENCY_EXCEPTION",
    INTERNAL_ERROR: "INTERNAL_ERROR",
    INVALID_ATTRIBUTE_KEY: "INVALID_ATTRIBUTE_KEY",
    INVALID_CUSTOMER_ENDPOINT: "INVALID_CUSTOMER_ENDPOINT",
    INVALID_QUEUE: "INVALID_QUEUE",
    INVALID_SYSTEM_ENDPOINT: "INVALID_SYSTEM_ENDPOINT",
    MISSING_CAMPAIGN: "MISSING_CAMPAIGN",
    MISSING_CUSTOMER_ENDPOINT: "MISSING_CUSTOMER_ENDPOINT",
    MISSING_QUEUE_ID_AND_SYSTEM_ENDPOINT: "MISSING_QUEUE_ID_AND_SYSTEM_ENDPOINT",
    REQUEST_THROTTLED: "REQUEST_THROTTLED",
};
export class IdempotencyException extends __BaseException {
    constructor(opts) {
        super({
            name: "IdempotencyException",
            $fault: "client",
            ...opts,
        });
        this.name = "IdempotencyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IdempotencyException.prototype);
        this.Message = opts.Message;
    }
}
export class DuplicateResourceException extends __BaseException {
    constructor(opts) {
        super({
            name: "DuplicateResourceException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateResourceException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateResourceException.prototype);
        this.Message = opts.Message;
    }
}
export const ContactFlowType = {
    AGENT_HOLD: "AGENT_HOLD",
    AGENT_TRANSFER: "AGENT_TRANSFER",
    AGENT_WHISPER: "AGENT_WHISPER",
    CONTACT_FLOW: "CONTACT_FLOW",
    CUSTOMER_HOLD: "CUSTOMER_HOLD",
    CUSTOMER_QUEUE: "CUSTOMER_QUEUE",
    CUSTOMER_WHISPER: "CUSTOMER_WHISPER",
    OUTBOUND_WHISPER: "OUTBOUND_WHISPER",
    QUEUE_TRANSFER: "QUEUE_TRANSFER",
};
export class InvalidContactFlowException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidContactFlowException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidContactFlowException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidContactFlowException.prototype);
        this.problems = opts.problems;
    }
}
export class InvalidContactFlowModuleException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidContactFlowModuleException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidContactFlowModuleException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidContactFlowModuleException.prototype);
        this.Problems = opts.Problems;
    }
}
export const EvaluationFormQuestionType = {
    NUMERIC: "NUMERIC",
    SINGLESELECT: "SINGLESELECT",
    TEXT: "TEXT",
};
export const NumericQuestionPropertyAutomationLabel = {
    AGENT_INTERACTION_DURATION: "AGENT_INTERACTION_DURATION",
    CONTACT_DURATION: "CONTACT_DURATION",
    CUSTOMER_HOLD_TIME: "CUSTOMER_HOLD_TIME",
    NON_TALK_TIME: "NON_TALK_TIME",
    NON_TALK_TIME_PERCENTAGE: "NON_TALK_TIME_PERCENTAGE",
    NUMBER_OF_INTERRUPTIONS: "NUMBER_OF_INTERRUPTIONS",
    OVERALL_AGENT_SENTIMENT_SCORE: "OVERALL_AGENT_SENTIMENT_SCORE",
    OVERALL_CUSTOMER_SENTIMENT_SCORE: "OVERALL_CUSTOMER_SENTIMENT_SCORE",
};
export var EvaluationFormNumericQuestionAutomation;
(function (EvaluationFormNumericQuestionAutomation) {
    EvaluationFormNumericQuestionAutomation.visit = (value, visitor) => {
        if (value.PropertyValue !== undefined)
            return visitor.PropertyValue(value.PropertyValue);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(EvaluationFormNumericQuestionAutomation || (EvaluationFormNumericQuestionAutomation = {}));
export const SingleSelectQuestionRuleCategoryAutomationCondition = {
    NOT_PRESENT: "NOT_PRESENT",
    PRESENT: "PRESENT",
};
export var EvaluationFormSingleSelectQuestionAutomationOption;
(function (EvaluationFormSingleSelectQuestionAutomationOption) {
    EvaluationFormSingleSelectQuestionAutomationOption.visit = (value, visitor) => {
        if (value.RuleCategory !== undefined)
            return visitor.RuleCategory(value.RuleCategory);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(EvaluationFormSingleSelectQuestionAutomationOption || (EvaluationFormSingleSelectQuestionAutomationOption = {}));
export const EvaluationFormSingleSelectQuestionDisplayMode = {
    DROPDOWN: "DROPDOWN",
    RADIO: "RADIO",
};
export var EvaluationFormQuestionTypeProperties;
(function (EvaluationFormQuestionTypeProperties) {
    EvaluationFormQuestionTypeProperties.visit = (value, visitor) => {
        if (value.Numeric !== undefined)
            return visitor.Numeric(value.Numeric);
        if (value.SingleSelect !== undefined)
            return visitor.SingleSelect(value.SingleSelect);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(EvaluationFormQuestionTypeProperties || (EvaluationFormQuestionTypeProperties = {}));
export const EvaluationFormScoringMode = {
    QUESTION_ONLY: "QUESTION_ONLY",
    SECTION_ONLY: "SECTION_ONLY",
};
export const EvaluationFormScoringStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const HoursOfOperationDays = {
    FRIDAY: "FRIDAY",
    MONDAY: "MONDAY",
    SATURDAY: "SATURDAY",
    SUNDAY: "SUNDAY",
    THURSDAY: "THURSDAY",
    TUESDAY: "TUESDAY",
    WEDNESDAY: "WEDNESDAY",
};
export const DirectoryType = {
    CONNECT_MANAGED: "CONNECT_MANAGED",
    EXISTING_DIRECTORY: "EXISTING_DIRECTORY",
    SAML: "SAML",
};
export const IntegrationType = {
    APPLICATION: "APPLICATION",
    CASES_DOMAIN: "CASES_DOMAIN",
    EVENT: "EVENT",
    FILE_SCANNER: "FILE_SCANNER",
    PINPOINT_APP: "PINPOINT_APP",
    VOICE_ID: "VOICE_ID",
    WISDOM_ASSISTANT: "WISDOM_ASSISTANT",
    WISDOM_KNOWLEDGE_BASE: "WISDOM_KNOWLEDGE_BASE",
    WISDOM_QUICK_RESPONSES: "WISDOM_QUICK_RESPONSES",
};
export const SourceType = {
    CASES: "CASES",
    SALESFORCE: "SALESFORCE",
    ZENDESK: "ZENDESK",
};
export const ParticipantRole = {
    AGENT: "AGENT",
    CUSTOMER: "CUSTOMER",
    CUSTOM_BOT: "CUSTOM_BOT",
    SUPERVISOR: "SUPERVISOR",
    SYSTEM: "SYSTEM",
};
export const RehydrationType = {
    ENTIRE_PAST_SESSION: "ENTIRE_PAST_SESSION",
    FROM_SEGMENT: "FROM_SEGMENT",
};
export var PredefinedAttributeValues;
(function (PredefinedAttributeValues) {
    PredefinedAttributeValues.visit = (value, visitor) => {
        if (value.StringList !== undefined)
            return visitor.StringList(value.StringList);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(PredefinedAttributeValues || (PredefinedAttributeValues = {}));
export const QuickConnectType = {
    PHONE_NUMBER: "PHONE_NUMBER",
    QUEUE: "QUEUE",
    USER: "USER",
};
export const BehaviorType = {
    ROUTE_ANY_CHANNEL: "ROUTE_ANY_CHANNEL",
    ROUTE_CURRENT_CHANNEL_ONLY: "ROUTE_CURRENT_CHANNEL_ONLY",
};
export const NotificationContentType = {
    PLAIN_TEXT: "PLAIN_TEXT",
};
export const NotificationDeliveryType = {
    EMAIL: "EMAIL",
};
export const ReferenceType = {
    ATTACHMENT: "ATTACHMENT",
    DATE: "DATE",
    EMAIL: "EMAIL",
    NUMBER: "NUMBER",
    STRING: "STRING",
    URL: "URL",
};
export const RulePublishStatus = {
    DRAFT: "DRAFT",
    PUBLISHED: "PUBLISHED",
};
export const EventSourceName = {
    OnCaseCreate: "OnCaseCreate",
    OnCaseUpdate: "OnCaseUpdate",
    OnContactEvaluationSubmit: "OnContactEvaluationSubmit",
    OnMetricDataUpdate: "OnMetricDataUpdate",
    OnPostCallAnalysisAvailable: "OnPostCallAnalysisAvailable",
    OnPostChatAnalysisAvailable: "OnPostChatAnalysisAvailable",
    OnRealTimeCallAnalysisAvailable: "OnRealTimeCallAnalysisAvailable",
    OnRealTimeChatAnalysisAvailable: "OnRealTimeChatAnalysisAvailable",
    OnSalesforceCaseCreate: "OnSalesforceCaseCreate",
    OnZendeskTicketCreate: "OnZendeskTicketCreate",
    OnZendeskTicketStatusUpdate: "OnZendeskTicketStatusUpdate",
};
export const TaskTemplateFieldType = {
    BOOLEAN: "BOOLEAN",
    DATE_TIME: "DATE_TIME",
    DESCRIPTION: "DESCRIPTION",
    EMAIL: "EMAIL",
    NAME: "NAME",
    NUMBER: "NUMBER",
    QUICK_CONNECT: "QUICK_CONNECT",
    SCHEDULED_TIME: "SCHEDULED_TIME",
    SINGLE_SELECT: "SINGLE_SELECT",
    TEXT: "TEXT",
    TEXT_AREA: "TEXT_AREA",
    URL: "URL",
};
export const TaskTemplateStatus = {
    ACTIVE: "ACTIVE",
    INACTIVE: "INACTIVE",
};
export const PropertyValidationExceptionReason = {
    INVALID_FORMAT: "INVALID_FORMAT",
    NOT_SUPPORTED: "NOT_SUPPORTED",
    REFERENCED_RESOURCE_NOT_FOUND: "REFERENCED_RESOURCE_NOT_FOUND",
    REQUIRED_PROPERTY_MISSING: "REQUIRED_PROPERTY_MISSING",
    RESOURCE_NAME_ALREADY_EXISTS: "RESOURCE_NAME_ALREADY_EXISTS",
    UNIQUE_CONSTRAINT_VIOLATED: "UNIQUE_CONSTRAINT_VIOLATED",
};
export class PropertyValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "PropertyValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "PropertyValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PropertyValidationException.prototype);
        this.Message = opts.Message;
        this.PropertyList = opts.PropertyList;
    }
}
export class ResourceNotReadyException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotReadyException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotReadyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotReadyException.prototype);
        this.Message = opts.Message;
    }
}
export const UseCaseType = {
    CONNECT_CAMPAIGNS: "CONNECT_CAMPAIGNS",
    RULES_EVALUATION: "RULES_EVALUATION",
};
export const PhoneType = {
    DESK_PHONE: "DESK_PHONE",
    SOFT_PHONE: "SOFT_PHONE",
};
export const ViewStatus = {
    PUBLISHED: "PUBLISHED",
    SAVED: "SAVED",
};
export const ViewType = {
    AWS_MANAGED: "AWS_MANAGED",
    CUSTOMER_MANAGED: "CUSTOMER_MANAGED",
};
export const ResourceType = {
    CONTACT: "CONTACT",
    CONTACT_FLOW: "CONTACT_FLOW",
    HIERARCHY_GROUP: "HIERARCHY_GROUP",
    HIERARCHY_LEVEL: "HIERARCHY_LEVEL",
    INSTANCE: "INSTANCE",
    PARTICIPANT: "PARTICIPANT",
    PHONE_NUMBER: "PHONE_NUMBER",
    USER: "USER",
};
export class ResourceInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
        this.Message = opts.Message;
        this.ResourceType = opts.ResourceType;
        this.ResourceId = opts.ResourceId;
    }
}
export class TooManyRequestsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
        this.Message = opts.Message;
    }
}
export const VocabularyState = {
    ACTIVE: "ACTIVE",
    CREATION_FAILED: "CREATION_FAILED",
    CREATION_IN_PROGRESS: "CREATION_IN_PROGRESS",
    DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS",
};
export var EvaluationAnswerData;
(function (EvaluationAnswerData) {
    EvaluationAnswerData.visit = (value, visitor) => {
        if (value.StringValue !== undefined)
            return visitor.StringValue(value.StringValue);
        if (value.NumericValue !== undefined)
            return visitor.NumericValue(value.NumericValue);
        if (value.NotApplicable !== undefined)
            return visitor.NotApplicable(value.NotApplicable);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(EvaluationAnswerData || (EvaluationAnswerData = {}));
export const EvaluationStatus = {
    DRAFT: "DRAFT",
    SUBMITTED: "SUBMITTED",
};
export class ContactFlowNotPublishedException extends __BaseException {
    constructor(opts) {
        super({
            name: "ContactFlowNotPublishedException",
            $fault: "client",
            ...opts,
        });
        this.name = "ContactFlowNotPublishedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ContactFlowNotPublishedException.prototype);
        this.Message = opts.Message;
    }
}
export const ContactFlowState = {
    ACTIVE: "ACTIVE",
    ARCHIVED: "ARCHIVED",
};
export const ContactFlowModuleState = {
    ACTIVE: "ACTIVE",
    ARCHIVED: "ARCHIVED",
};
export const ContactFlowModuleStatus = {
    PUBLISHED: "PUBLISHED",
    SAVED: "SAVED",
};
export const EvaluationFormVersionStatus = {
    ACTIVE: "ACTIVE",
    DRAFT: "DRAFT",
};
export const InstanceStatus = {
    ACTIVE: "ACTIVE",
    CREATION_FAILED: "CREATION_FAILED",
    CREATION_IN_PROGRESS: "CREATION_IN_PROGRESS",
};
export const InstanceAttributeType = {
    AUTO_RESOLVE_BEST_VOICES: "AUTO_RESOLVE_BEST_VOICES",
    CONTACTFLOW_LOGS: "CONTACTFLOW_LOGS",
    CONTACT_LENS: "CONTACT_LENS",
    EARLY_MEDIA: "EARLY_MEDIA",
    ENHANCED_CHAT_MONITORING: "ENHANCED_CHAT_MONITORING",
    ENHANCED_CONTACT_MONITORING: "ENHANCED_CONTACT_MONITORING",
    HIGH_VOLUME_OUTBOUND: "HIGH_VOLUME_OUTBOUND",
    INBOUND_CALLS: "INBOUND_CALLS",
    MULTI_PARTY_CONFERENCE: "MULTI_PARTY_CONFERENCE",
    OUTBOUND_CALLS: "OUTBOUND_CALLS",
    USE_CUSTOM_TTS_VOICES: "USE_CUSTOM_TTS_VOICES",
};
export const CreateInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.InstanceAlias && { InstanceAlias: SENSITIVE_STRING }),
});
export const UserIdentityInfoFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FirstName && { FirstName: SENSITIVE_STRING }),
    ...(obj.LastName && { LastName: SENSITIVE_STRING }),
    ...(obj.Email && { Email: SENSITIVE_STRING }),
    ...(obj.SecondaryEmail && { SecondaryEmail: SENSITIVE_STRING }),
});
export const CreateUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Password && { Password: SENSITIVE_STRING }),
    ...(obj.IdentityInfo && { IdentityInfo: UserIdentityInfoFilterSensitiveLog(obj.IdentityInfo) }),
});
export const ViewInputContentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Actions && { Actions: SENSITIVE_STRING }),
});
export const CreateViewRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Content && { Content: ViewInputContentFilterSensitiveLog(obj.Content) }),
    ...(obj.Name && { Name: SENSITIVE_STRING }),
});
export const ViewContentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.InputSchema && { InputSchema: SENSITIVE_STRING }),
    ...(obj.Actions && { Actions: SENSITIVE_STRING }),
});
export const ViewFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Name && { Name: SENSITIVE_STRING }),
    ...(obj.Content && { Content: ViewContentFilterSensitiveLog(obj.Content) }),
});
export const CreateViewResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.View && { View: ViewFilterSensitiveLog(obj.View) }),
});
export const CreateViewVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.View && { View: ViewFilterSensitiveLog(obj.View) }),
});
export const ContactFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Name && { Name: SENSITIVE_STRING }),
    ...(obj.Description && { Description: SENSITIVE_STRING }),
});
export const DescribeContactResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Contact && { Contact: ContactFilterSensitiveLog(obj.Contact) }),
});
export const InstanceFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.InstanceAlias && { InstanceAlias: SENSITIVE_STRING }),
});
export const DescribeInstanceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Instance && { Instance: InstanceFilterSensitiveLog(obj.Instance) }),
});
