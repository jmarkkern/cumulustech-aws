import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ConnectServiceException as __BaseException } from "./ConnectServiceException";
import {
  ActionSummary,
  AgentAvailabilityTimer,
  AgentConfig,
  AgentContactReference,
  AgentHierarchyGroups,
  AgentStatusReference,
  AgentStatusSummary,
  AgentStatusType,
  AnalyticsDataAssociationResult,
  Application,
  Attribute,
  Channel,
  ContactFlowModuleState,
  ContactFlowState,
  ContactFlowType,
  ContactInitiationMethod,
  ContactState,
  DirectoryType,
  Distribution,
  EvaluationFormVersionStatus,
  EvaluationScore,
  EvaluationStatus,
  EventSourceName,
  FlowAssociationResourceType,
  FlowAssociationSummary,
  InstanceStatus,
  InstanceStorageConfig,
  InstanceStorageResourceType,
  IntegrationType,
  LexBot,
  LexV2Bot,
  ListFlowAssociationResourceType,
  MediaConcurrency,
  MonitorCapability,
  OutboundCallerConfig,
  ParticipantRole,
  PredefinedAttributeValues,
  QueueReference,
  QuickConnectConfig,
  QuickConnectType,
  ReferenceType,
  RoutingProfileQueueReference,
  RuleAction,
  RulePublishStatus,
  RuleTriggerEventSource,
  SourceType,
  TaskTemplateConstraints,
  TaskTemplateDefaults,
  TaskTemplateField,
  TaskTemplateStatus,
  UseCaseType,
  UserIdentityInfo,
  UserPhoneConfig,
  UserProficiency,
  View,
  ViewStatus,
  ViewType,
  VocabularyLanguageCode,
  VocabularyState,
} from "./models_0";
export declare const PhoneNumberCountryCode: {
  readonly AD: "AD";
  readonly AE: "AE";
  readonly AF: "AF";
  readonly AG: "AG";
  readonly AI: "AI";
  readonly AL: "AL";
  readonly AM: "AM";
  readonly AN: "AN";
  readonly AO: "AO";
  readonly AQ: "AQ";
  readonly AR: "AR";
  readonly AS: "AS";
  readonly AT: "AT";
  readonly AU: "AU";
  readonly AW: "AW";
  readonly AZ: "AZ";
  readonly BA: "BA";
  readonly BB: "BB";
  readonly BD: "BD";
  readonly BE: "BE";
  readonly BF: "BF";
  readonly BG: "BG";
  readonly BH: "BH";
  readonly BI: "BI";
  readonly BJ: "BJ";
  readonly BL: "BL";
  readonly BM: "BM";
  readonly BN: "BN";
  readonly BO: "BO";
  readonly BR: "BR";
  readonly BS: "BS";
  readonly BT: "BT";
  readonly BW: "BW";
  readonly BY: "BY";
  readonly BZ: "BZ";
  readonly CA: "CA";
  readonly CC: "CC";
  readonly CD: "CD";
  readonly CF: "CF";
  readonly CG: "CG";
  readonly CH: "CH";
  readonly CI: "CI";
  readonly CK: "CK";
  readonly CL: "CL";
  readonly CM: "CM";
  readonly CN: "CN";
  readonly CO: "CO";
  readonly CR: "CR";
  readonly CU: "CU";
  readonly CV: "CV";
  readonly CW: "CW";
  readonly CX: "CX";
  readonly CY: "CY";
  readonly CZ: "CZ";
  readonly DE: "DE";
  readonly DJ: "DJ";
  readonly DK: "DK";
  readonly DM: "DM";
  readonly DO: "DO";
  readonly DZ: "DZ";
  readonly EC: "EC";
  readonly EE: "EE";
  readonly EG: "EG";
  readonly EH: "EH";
  readonly ER: "ER";
  readonly ES: "ES";
  readonly ET: "ET";
  readonly FI: "FI";
  readonly FJ: "FJ";
  readonly FK: "FK";
  readonly FM: "FM";
  readonly FO: "FO";
  readonly FR: "FR";
  readonly GA: "GA";
  readonly GB: "GB";
  readonly GD: "GD";
  readonly GE: "GE";
  readonly GG: "GG";
  readonly GH: "GH";
  readonly GI: "GI";
  readonly GL: "GL";
  readonly GM: "GM";
  readonly GN: "GN";
  readonly GQ: "GQ";
  readonly GR: "GR";
  readonly GT: "GT";
  readonly GU: "GU";
  readonly GW: "GW";
  readonly GY: "GY";
  readonly HK: "HK";
  readonly HN: "HN";
  readonly HR: "HR";
  readonly HT: "HT";
  readonly HU: "HU";
  readonly ID: "ID";
  readonly IE: "IE";
  readonly IL: "IL";
  readonly IM: "IM";
  readonly IN: "IN";
  readonly IO: "IO";
  readonly IQ: "IQ";
  readonly IR: "IR";
  readonly IS: "IS";
  readonly IT: "IT";
  readonly JE: "JE";
  readonly JM: "JM";
  readonly JO: "JO";
  readonly JP: "JP";
  readonly KE: "KE";
  readonly KG: "KG";
  readonly KH: "KH";
  readonly KI: "KI";
  readonly KM: "KM";
  readonly KN: "KN";
  readonly KP: "KP";
  readonly KR: "KR";
  readonly KW: "KW";
  readonly KY: "KY";
  readonly KZ: "KZ";
  readonly LA: "LA";
  readonly LB: "LB";
  readonly LC: "LC";
  readonly LI: "LI";
  readonly LK: "LK";
  readonly LR: "LR";
  readonly LS: "LS";
  readonly LT: "LT";
  readonly LU: "LU";
  readonly LV: "LV";
  readonly LY: "LY";
  readonly MA: "MA";
  readonly MC: "MC";
  readonly MD: "MD";
  readonly ME: "ME";
  readonly MF: "MF";
  readonly MG: "MG";
  readonly MH: "MH";
  readonly MK: "MK";
  readonly ML: "ML";
  readonly MM: "MM";
  readonly MN: "MN";
  readonly MO: "MO";
  readonly MP: "MP";
  readonly MR: "MR";
  readonly MS: "MS";
  readonly MT: "MT";
  readonly MU: "MU";
  readonly MV: "MV";
  readonly MW: "MW";
  readonly MX: "MX";
  readonly MY: "MY";
  readonly MZ: "MZ";
  readonly NA: "NA";
  readonly NC: "NC";
  readonly NE: "NE";
  readonly NG: "NG";
  readonly NI: "NI";
  readonly NL: "NL";
  readonly NO: "NO";
  readonly NP: "NP";
  readonly NR: "NR";
  readonly NU: "NU";
  readonly NZ: "NZ";
  readonly OM: "OM";
  readonly PA: "PA";
  readonly PE: "PE";
  readonly PF: "PF";
  readonly PG: "PG";
  readonly PH: "PH";
  readonly PK: "PK";
  readonly PL: "PL";
  readonly PM: "PM";
  readonly PN: "PN";
  readonly PR: "PR";
  readonly PT: "PT";
  readonly PW: "PW";
  readonly PY: "PY";
  readonly QA: "QA";
  readonly RE: "RE";
  readonly RO: "RO";
  readonly RS: "RS";
  readonly RU: "RU";
  readonly RW: "RW";
  readonly SA: "SA";
  readonly SB: "SB";
  readonly SC: "SC";
  readonly SD: "SD";
  readonly SE: "SE";
  readonly SG: "SG";
  readonly SH: "SH";
  readonly SI: "SI";
  readonly SJ: "SJ";
  readonly SK: "SK";
  readonly SL: "SL";
  readonly SM: "SM";
  readonly SN: "SN";
  readonly SO: "SO";
  readonly SR: "SR";
  readonly ST: "ST";
  readonly SV: "SV";
  readonly SX: "SX";
  readonly SY: "SY";
  readonly SZ: "SZ";
  readonly TC: "TC";
  readonly TD: "TD";
  readonly TG: "TG";
  readonly TH: "TH";
  readonly TJ: "TJ";
  readonly TK: "TK";
  readonly TL: "TL";
  readonly TM: "TM";
  readonly TN: "TN";
  readonly TO: "TO";
  readonly TR: "TR";
  readonly TT: "TT";
  readonly TV: "TV";
  readonly TW: "TW";
  readonly TZ: "TZ";
  readonly UA: "UA";
  readonly UG: "UG";
  readonly US: "US";
  readonly UY: "UY";
  readonly UZ: "UZ";
  readonly VA: "VA";
  readonly VC: "VC";
  readonly VE: "VE";
  readonly VG: "VG";
  readonly VI: "VI";
  readonly VN: "VN";
  readonly VU: "VU";
  readonly WF: "WF";
  readonly WS: "WS";
  readonly YE: "YE";
  readonly YT: "YT";
  readonly ZA: "ZA";
  readonly ZM: "ZM";
  readonly ZW: "ZW";
};
export type PhoneNumberCountryCode =
  (typeof PhoneNumberCountryCode)[keyof typeof PhoneNumberCountryCode];
export declare const PhoneNumberWorkflowStatus: {
  readonly Claimed: "CLAIMED";
  readonly Failed: "FAILED";
  readonly InProgress: "IN_PROGRESS";
};
export type PhoneNumberWorkflowStatus =
  (typeof PhoneNumberWorkflowStatus)[keyof typeof PhoneNumberWorkflowStatus];
export interface PhoneNumberStatus {
  Status?: PhoneNumberWorkflowStatus;
  Message?: string;
}
export declare const PhoneNumberType: {
  readonly DID: "DID";
  readonly SHARED: "SHARED";
  readonly SHORT_CODE: "SHORT_CODE";
  readonly THIRD_PARTY_DID: "THIRD_PARTY_DID";
  readonly THIRD_PARTY_TF: "THIRD_PARTY_TF";
  readonly TOLL_FREE: "TOLL_FREE";
  readonly UIFN: "UIFN";
};
export type PhoneNumberType =
  (typeof PhoneNumberType)[keyof typeof PhoneNumberType];
export interface ClaimedPhoneNumberSummary {
  PhoneNumberId?: string;
  PhoneNumberArn?: string;
  PhoneNumber?: string;
  PhoneNumberCountryCode?: PhoneNumberCountryCode;
  PhoneNumberType?: PhoneNumberType;
  PhoneNumberDescription?: string;
  TargetArn?: string;
  InstanceId?: string;
  Tags?: Record<string, string>;
  PhoneNumberStatus?: PhoneNumberStatus;
  SourcePhoneNumberArn?: string;
}
export interface DescribePhoneNumberResponse {
  ClaimedPhoneNumberSummary?: ClaimedPhoneNumberSummary;
}
export interface DescribePredefinedAttributeRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
}
export interface PredefinedAttribute {
  Name?: string;
  Values?: PredefinedAttributeValues;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface DescribePredefinedAttributeResponse {
  PredefinedAttribute?: PredefinedAttribute;
}
export interface DescribePromptRequest {
  InstanceId: string | undefined;
  PromptId: string | undefined;
}
export interface Prompt {
  PromptARN?: string;
  PromptId?: string;
  Name?: string;
  Description?: string;
  Tags?: Record<string, string>;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface DescribePromptResponse {
  Prompt?: Prompt;
}
export interface DescribeQueueRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
}
export declare const QueueStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type QueueStatus = (typeof QueueStatus)[keyof typeof QueueStatus];
export interface Queue {
  Name?: string;
  QueueArn?: string;
  QueueId?: string;
  Description?: string;
  OutboundCallerConfig?: OutboundCallerConfig;
  HoursOfOperationId?: string;
  MaxContacts?: number;
  Status?: QueueStatus;
  Tags?: Record<string, string>;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface DescribeQueueResponse {
  Queue?: Queue;
}
export interface DescribeQuickConnectRequest {
  InstanceId: string | undefined;
  QuickConnectId: string | undefined;
}
export interface QuickConnect {
  QuickConnectARN?: string;
  QuickConnectId?: string;
  Name?: string;
  Description?: string;
  QuickConnectConfig?: QuickConnectConfig;
  Tags?: Record<string, string>;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface DescribeQuickConnectResponse {
  QuickConnect?: QuickConnect;
}
export interface DescribeRoutingProfileRequest {
  InstanceId: string | undefined;
  RoutingProfileId: string | undefined;
}
export interface RoutingProfile {
  InstanceId?: string;
  Name?: string;
  RoutingProfileArn?: string;
  RoutingProfileId?: string;
  Description?: string;
  MediaConcurrencies?: MediaConcurrency[];
  DefaultOutboundQueueId?: string;
  Tags?: Record<string, string>;
  NumberOfAssociatedQueues?: number;
  NumberOfAssociatedUsers?: number;
  AgentAvailabilityTimer?: AgentAvailabilityTimer;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
  IsDefault?: boolean;
}
export interface DescribeRoutingProfileResponse {
  RoutingProfile?: RoutingProfile;
}
export interface DescribeRuleRequest {
  InstanceId: string | undefined;
  RuleId: string | undefined;
}
export interface Rule {
  Name: string | undefined;
  RuleId: string | undefined;
  RuleArn: string | undefined;
  TriggerEventSource: RuleTriggerEventSource | undefined;
  Function: string | undefined;
  Actions: RuleAction[] | undefined;
  PublishStatus: RulePublishStatus | undefined;
  CreatedTime: Date | undefined;
  LastUpdatedTime: Date | undefined;
  LastUpdatedBy: string | undefined;
  Tags?: Record<string, string>;
}
export interface DescribeRuleResponse {
  Rule: Rule | undefined;
}
export interface DescribeSecurityProfileRequest {
  SecurityProfileId: string | undefined;
  InstanceId: string | undefined;
}
export interface SecurityProfile {
  Id?: string;
  OrganizationResourceId?: string;
  Arn?: string;
  SecurityProfileName?: string;
  Description?: string;
  Tags?: Record<string, string>;
  AllowedAccessControlTags?: Record<string, string>;
  TagRestrictedResources?: string[];
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
  HierarchyRestrictedResources?: string[];
  AllowedAccessControlHierarchyGroupId?: string;
}
export interface DescribeSecurityProfileResponse {
  SecurityProfile?: SecurityProfile;
}
export interface DescribeTrafficDistributionGroupRequest {
  TrafficDistributionGroupId: string | undefined;
}
export declare const TrafficDistributionGroupStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATION_FAILED: "CREATION_FAILED";
  readonly CREATION_IN_PROGRESS: "CREATION_IN_PROGRESS";
  readonly DELETION_FAILED: "DELETION_FAILED";
  readonly PENDING_DELETION: "PENDING_DELETION";
  readonly UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS";
};
export type TrafficDistributionGroupStatus =
  (typeof TrafficDistributionGroupStatus)[keyof typeof TrafficDistributionGroupStatus];
export interface TrafficDistributionGroup {
  Id?: string;
  Arn?: string;
  Name?: string;
  Description?: string;
  InstanceArn?: string;
  Status?: TrafficDistributionGroupStatus;
  Tags?: Record<string, string>;
  IsDefault?: boolean;
}
export interface DescribeTrafficDistributionGroupResponse {
  TrafficDistributionGroup?: TrafficDistributionGroup;
}
export interface DescribeUserRequest {
  UserId: string | undefined;
  InstanceId: string | undefined;
}
export interface User {
  Id?: string;
  Arn?: string;
  Username?: string;
  IdentityInfo?: UserIdentityInfo;
  PhoneConfig?: UserPhoneConfig;
  DirectoryUserId?: string;
  SecurityProfileIds?: string[];
  RoutingProfileId?: string;
  HierarchyGroupId?: string;
  Tags?: Record<string, string>;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface DescribeUserResponse {
  User?: User;
}
export interface DescribeUserHierarchyGroupRequest {
  HierarchyGroupId: string | undefined;
  InstanceId: string | undefined;
}
export interface HierarchyGroupSummary {
  Id?: string;
  Arn?: string;
  Name?: string;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface HierarchyPath {
  LevelOne?: HierarchyGroupSummary;
  LevelTwo?: HierarchyGroupSummary;
  LevelThree?: HierarchyGroupSummary;
  LevelFour?: HierarchyGroupSummary;
  LevelFive?: HierarchyGroupSummary;
}
export interface HierarchyGroup {
  Id?: string;
  Arn?: string;
  Name?: string;
  LevelId?: string;
  HierarchyPath?: HierarchyPath;
  Tags?: Record<string, string>;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface DescribeUserHierarchyGroupResponse {
  HierarchyGroup?: HierarchyGroup;
}
export interface DescribeUserHierarchyStructureRequest {
  InstanceId: string | undefined;
}
export interface HierarchyLevel {
  Id?: string;
  Arn?: string;
  Name?: string;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface HierarchyStructure {
  LevelOne?: HierarchyLevel;
  LevelTwo?: HierarchyLevel;
  LevelThree?: HierarchyLevel;
  LevelFour?: HierarchyLevel;
  LevelFive?: HierarchyLevel;
}
export interface DescribeUserHierarchyStructureResponse {
  HierarchyStructure?: HierarchyStructure;
}
export interface DescribeViewRequest {
  InstanceId: string | undefined;
  ViewId: string | undefined;
}
export interface DescribeViewResponse {
  View?: View;
}
export interface DescribeVocabularyRequest {
  InstanceId: string | undefined;
  VocabularyId: string | undefined;
}
export interface Vocabulary {
  Name: string | undefined;
  Id: string | undefined;
  Arn: string | undefined;
  LanguageCode: VocabularyLanguageCode | undefined;
  State: VocabularyState | undefined;
  LastModifiedTime: Date | undefined;
  FailureReason?: string;
  Content?: string;
  Tags?: Record<string, string>;
}
export interface DescribeVocabularyResponse {
  Vocabulary: Vocabulary | undefined;
}
export interface DisassociateAnalyticsDataSetRequest {
  InstanceId: string | undefined;
  DataSetId: string | undefined;
  TargetAccountId?: string;
}
export interface DisassociateApprovedOriginRequest {
  InstanceId: string | undefined;
  Origin: string | undefined;
}
export interface DisassociateBotRequest {
  InstanceId: string | undefined;
  LexBot?: LexBot;
  LexV2Bot?: LexV2Bot;
}
export interface DisassociateFlowRequest {
  InstanceId: string | undefined;
  ResourceId: string | undefined;
  ResourceType: FlowAssociationResourceType | undefined;
}
export interface DisassociateFlowResponse {}
export interface DisassociateInstanceStorageConfigRequest {
  InstanceId: string | undefined;
  AssociationId: string | undefined;
  ResourceType: InstanceStorageResourceType | undefined;
}
export interface DisassociateLambdaFunctionRequest {
  InstanceId: string | undefined;
  FunctionArn: string | undefined;
}
export interface DisassociateLexBotRequest {
  InstanceId: string | undefined;
  BotName: string | undefined;
  LexRegion: string | undefined;
}
export interface DisassociatePhoneNumberContactFlowRequest {
  PhoneNumberId: string | undefined;
  InstanceId: string | undefined;
}
export interface DisassociateQueueQuickConnectsRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  QuickConnectIds: string[] | undefined;
}
export interface DisassociateRoutingProfileQueuesRequest {
  InstanceId: string | undefined;
  RoutingProfileId: string | undefined;
  QueueReferences: RoutingProfileQueueReference[] | undefined;
}
export interface DisassociateSecurityKeyRequest {
  InstanceId: string | undefined;
  AssociationId: string | undefined;
}
export interface DisassociateTrafficDistributionGroupUserRequest {
  TrafficDistributionGroupId: string | undefined;
  UserId: string | undefined;
  InstanceId: string | undefined;
}
export interface DisassociateTrafficDistributionGroupUserResponse {}
export interface UserProficiencyDisassociate {
  AttributeName: string | undefined;
  AttributeValue: string | undefined;
}
export interface DisassociateUserProficienciesRequest {
  InstanceId: string | undefined;
  UserId: string | undefined;
  UserProficiencies: UserProficiencyDisassociate[] | undefined;
}
export interface DismissUserContactRequest {
  UserId: string | undefined;
  InstanceId: string | undefined;
  ContactId: string | undefined;
}
export interface DismissUserContactResponse {}
export interface GetContactAttributesRequest {
  InstanceId: string | undefined;
  InitialContactId: string | undefined;
}
export interface GetContactAttributesResponse {
  Attributes?: Record<string, string>;
}
export declare const CurrentMetricName: {
  readonly AGENTS_AFTER_CONTACT_WORK: "AGENTS_AFTER_CONTACT_WORK";
  readonly AGENTS_AVAILABLE: "AGENTS_AVAILABLE";
  readonly AGENTS_ERROR: "AGENTS_ERROR";
  readonly AGENTS_NON_PRODUCTIVE: "AGENTS_NON_PRODUCTIVE";
  readonly AGENTS_ONLINE: "AGENTS_ONLINE";
  readonly AGENTS_ON_CALL: "AGENTS_ON_CALL";
  readonly AGENTS_ON_CONTACT: "AGENTS_ON_CONTACT";
  readonly AGENTS_STAFFED: "AGENTS_STAFFED";
  readonly CONTACTS_IN_QUEUE: "CONTACTS_IN_QUEUE";
  readonly CONTACTS_SCHEDULED: "CONTACTS_SCHEDULED";
  readonly OLDEST_CONTACT_AGE: "OLDEST_CONTACT_AGE";
  readonly SLOTS_ACTIVE: "SLOTS_ACTIVE";
  readonly SLOTS_AVAILABLE: "SLOTS_AVAILABLE";
};
export type CurrentMetricName =
  (typeof CurrentMetricName)[keyof typeof CurrentMetricName];
export declare const Unit: {
  readonly COUNT: "COUNT";
  readonly PERCENT: "PERCENT";
  readonly SECONDS: "SECONDS";
};
export type Unit = (typeof Unit)[keyof typeof Unit];
export interface CurrentMetric {
  Name?: CurrentMetricName;
  Unit?: Unit;
}
export interface Filters {
  Queues?: string[];
  Channels?: Channel[];
  RoutingProfiles?: string[];
  RoutingStepExpressions?: string[];
}
export declare const Grouping: {
  readonly CHANNEL: "CHANNEL";
  readonly QUEUE: "QUEUE";
  readonly ROUTING_PROFILE: "ROUTING_PROFILE";
  readonly ROUTING_STEP_EXPRESSION: "ROUTING_STEP_EXPRESSION";
};
export type Grouping = (typeof Grouping)[keyof typeof Grouping];
export declare const SortOrder: {
  readonly ASCENDING: "ASCENDING";
  readonly DESCENDING: "DESCENDING";
};
export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder];
export interface CurrentMetricSortCriteria {
  SortByMetric?: CurrentMetricName;
  SortOrder?: SortOrder;
}
export interface GetCurrentMetricDataRequest {
  InstanceId: string | undefined;
  Filters: Filters | undefined;
  Groupings?: Grouping[];
  CurrentMetrics: CurrentMetric[] | undefined;
  NextToken?: string;
  MaxResults?: number;
  SortCriteria?: CurrentMetricSortCriteria[];
}
export interface CurrentMetricData {
  Metric?: CurrentMetric;
  Value?: number;
}
export interface RoutingProfileReference {
  Id?: string;
  Arn?: string;
}
export interface Dimensions {
  Queue?: QueueReference;
  Channel?: Channel;
  RoutingProfile?: RoutingProfileReference;
  RoutingStepExpression?: string;
}
export interface CurrentMetricResult {
  Dimensions?: Dimensions;
  Collections?: CurrentMetricData[];
}
export interface GetCurrentMetricDataResponse {
  NextToken?: string;
  MetricResults?: CurrentMetricResult[];
  DataSnapshotTime?: Date;
  ApproximateTotalCount?: number;
}
export interface ContactFilter {
  ContactStates?: ContactState[];
}
export interface UserDataFilters {
  Queues?: string[];
  ContactFilter?: ContactFilter;
  RoutingProfiles?: string[];
  Agents?: string[];
  UserHierarchyGroups?: string[];
}
export interface GetCurrentUserDataRequest {
  InstanceId: string | undefined;
  Filters: UserDataFilters | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface HierarchyGroupSummaryReference {
  Id?: string;
  Arn?: string;
}
export interface HierarchyPathReference {
  LevelOne?: HierarchyGroupSummaryReference;
  LevelTwo?: HierarchyGroupSummaryReference;
  LevelThree?: HierarchyGroupSummaryReference;
  LevelFour?: HierarchyGroupSummaryReference;
  LevelFive?: HierarchyGroupSummaryReference;
}
export interface UserReference {
  Id?: string;
  Arn?: string;
}
export interface UserData {
  User?: UserReference;
  RoutingProfile?: RoutingProfileReference;
  HierarchyPath?: HierarchyPathReference;
  Status?: AgentStatusReference;
  AvailableSlotsByChannel?: Partial<Record<Channel, number>>;
  MaxSlotsByChannel?: Partial<Record<Channel, number>>;
  ActiveSlotsByChannel?: Partial<Record<Channel, number>>;
  Contacts?: AgentContactReference[];
  NextStatus?: string;
}
export interface GetCurrentUserDataResponse {
  NextToken?: string;
  UserDataList?: UserData[];
  ApproximateTotalCount?: number;
}
export interface GetFederationTokenRequest {
  InstanceId: string | undefined;
}
export interface Credentials {
  AccessToken?: string;
  AccessTokenExpiration?: Date;
  RefreshToken?: string;
  RefreshTokenExpiration?: Date;
}
export interface GetFederationTokenResponse {
  Credentials?: Credentials;
  SignInUrl?: string;
  UserArn?: string;
  UserId?: string;
}
export declare class UserNotFoundException extends __BaseException {
  readonly name: "UserNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<UserNotFoundException, __BaseException>
  );
}
export interface GetFlowAssociationRequest {
  InstanceId: string | undefined;
  ResourceId: string | undefined;
  ResourceType: FlowAssociationResourceType | undefined;
}
export interface GetFlowAssociationResponse {
  ResourceId?: string;
  FlowId?: string;
  ResourceType?: FlowAssociationResourceType;
}
export declare const HistoricalMetricName: {
  readonly ABANDON_TIME: "ABANDON_TIME";
  readonly AFTER_CONTACT_WORK_TIME: "AFTER_CONTACT_WORK_TIME";
  readonly API_CONTACTS_HANDLED: "API_CONTACTS_HANDLED";
  readonly CALLBACK_CONTACTS_HANDLED: "CALLBACK_CONTACTS_HANDLED";
  readonly CONTACTS_ABANDONED: "CONTACTS_ABANDONED";
  readonly CONTACTS_AGENT_HUNG_UP_FIRST: "CONTACTS_AGENT_HUNG_UP_FIRST";
  readonly CONTACTS_CONSULTED: "CONTACTS_CONSULTED";
  readonly CONTACTS_HANDLED: "CONTACTS_HANDLED";
  readonly CONTACTS_HANDLED_INCOMING: "CONTACTS_HANDLED_INCOMING";
  readonly CONTACTS_HANDLED_OUTBOUND: "CONTACTS_HANDLED_OUTBOUND";
  readonly CONTACTS_HOLD_ABANDONS: "CONTACTS_HOLD_ABANDONS";
  readonly CONTACTS_MISSED: "CONTACTS_MISSED";
  readonly CONTACTS_QUEUED: "CONTACTS_QUEUED";
  readonly CONTACTS_TRANSFERRED_IN: "CONTACTS_TRANSFERRED_IN";
  readonly CONTACTS_TRANSFERRED_IN_FROM_QUEUE: "CONTACTS_TRANSFERRED_IN_FROM_QUEUE";
  readonly CONTACTS_TRANSFERRED_OUT: "CONTACTS_TRANSFERRED_OUT";
  readonly CONTACTS_TRANSFERRED_OUT_FROM_QUEUE: "CONTACTS_TRANSFERRED_OUT_FROM_QUEUE";
  readonly HANDLE_TIME: "HANDLE_TIME";
  readonly HOLD_TIME: "HOLD_TIME";
  readonly INTERACTION_AND_HOLD_TIME: "INTERACTION_AND_HOLD_TIME";
  readonly INTERACTION_TIME: "INTERACTION_TIME";
  readonly OCCUPANCY: "OCCUPANCY";
  readonly QUEUED_TIME: "QUEUED_TIME";
  readonly QUEUE_ANSWER_TIME: "QUEUE_ANSWER_TIME";
  readonly SERVICE_LEVEL: "SERVICE_LEVEL";
};
export type HistoricalMetricName =
  (typeof HistoricalMetricName)[keyof typeof HistoricalMetricName];
export declare const Statistic: {
  readonly AVG: "AVG";
  readonly MAX: "MAX";
  readonly SUM: "SUM";
};
export type Statistic = (typeof Statistic)[keyof typeof Statistic];
export declare const Comparison: {
  readonly LT: "LT";
};
export type Comparison = (typeof Comparison)[keyof typeof Comparison];
export interface Threshold {
  Comparison?: Comparison;
  ThresholdValue?: number;
}
export interface HistoricalMetric {
  Name?: HistoricalMetricName;
  Threshold?: Threshold;
  Statistic?: Statistic;
  Unit?: Unit;
}
export interface GetMetricDataRequest {
  InstanceId: string | undefined;
  StartTime: Date | undefined;
  EndTime: Date | undefined;
  Filters: Filters | undefined;
  Groupings?: Grouping[];
  HistoricalMetrics: HistoricalMetric[] | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface HistoricalMetricData {
  Metric?: HistoricalMetric;
  Value?: number;
}
export interface HistoricalMetricResult {
  Dimensions?: Dimensions;
  Collections?: HistoricalMetricData[];
}
export interface GetMetricDataResponse {
  NextToken?: string;
  MetricResults?: HistoricalMetricResult[];
}
export interface FilterV2 {
  FilterKey?: string;
  FilterValues?: string[];
}
export declare const IntervalPeriod: {
  readonly DAY: "DAY";
  readonly FIFTEEN_MIN: "FIFTEEN_MIN";
  readonly HOUR: "HOUR";
  readonly THIRTY_MIN: "THIRTY_MIN";
  readonly TOTAL: "TOTAL";
  readonly WEEK: "WEEK";
};
export type IntervalPeriod =
  (typeof IntervalPeriod)[keyof typeof IntervalPeriod];
export interface IntervalDetails {
  TimeZone?: string;
  IntervalPeriod?: IntervalPeriod;
}
export interface MetricFilterV2 {
  MetricFilterKey?: string;
  MetricFilterValues?: string[];
  Negate?: boolean;
}
export interface ThresholdV2 {
  Comparison?: string;
  ThresholdValue?: number;
}
export interface MetricV2 {
  Name?: string;
  Threshold?: ThresholdV2[];
  MetricFilters?: MetricFilterV2[];
}
export interface GetMetricDataV2Request {
  ResourceArn: string | undefined;
  StartTime: Date | undefined;
  EndTime: Date | undefined;
  Interval?: IntervalDetails;
  Filters: FilterV2[] | undefined;
  Groupings?: string[];
  Metrics: MetricV2[] | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface MetricDataV2 {
  Metric?: MetricV2;
  Value?: number;
}
export interface MetricInterval {
  Interval?: IntervalPeriod;
  StartTime?: Date;
  EndTime?: Date;
}
export interface MetricResultV2 {
  Dimensions?: Record<string, string>;
  MetricInterval?: MetricInterval;
  Collections?: MetricDataV2[];
}
export interface GetMetricDataV2Response {
  NextToken?: string;
  MetricResults?: MetricResultV2[];
}
export interface GetPromptFileRequest {
  InstanceId: string | undefined;
  PromptId: string | undefined;
}
export interface GetPromptFileResponse {
  PromptPresignedUrl?: string;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface GetTaskTemplateRequest {
  InstanceId: string | undefined;
  TaskTemplateId: string | undefined;
  SnapshotVersion?: string;
}
export interface GetTaskTemplateResponse {
  InstanceId?: string;
  Id: string | undefined;
  Arn: string | undefined;
  Name: string | undefined;
  Description?: string;
  ContactFlowId?: string;
  Constraints?: TaskTemplateConstraints;
  Defaults?: TaskTemplateDefaults;
  Fields?: TaskTemplateField[];
  Status?: TaskTemplateStatus;
  LastModifiedTime?: Date;
  CreatedTime?: Date;
  Tags?: Record<string, string>;
}
export interface GetTrafficDistributionRequest {
  Id: string | undefined;
}
export interface SignInDistribution {
  Region: string | undefined;
  Enabled: boolean | undefined;
}
export interface SignInConfig {
  Distributions: SignInDistribution[] | undefined;
}
export interface TelephonyConfig {
  Distributions: Distribution[] | undefined;
}
export interface GetTrafficDistributionResponse {
  TelephonyConfig?: TelephonyConfig;
  Id?: string;
  Arn?: string;
  SignInConfig?: SignInConfig;
  AgentConfig?: AgentConfig;
}
export interface ImportPhoneNumberRequest {
  InstanceId: string | undefined;
  SourcePhoneNumberArn: string | undefined;
  PhoneNumberDescription?: string;
  Tags?: Record<string, string>;
  ClientToken?: string;
}
export interface ImportPhoneNumberResponse {
  PhoneNumberId?: string;
  PhoneNumberArn?: string;
}
export interface ListAgentStatusRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  AgentStatusTypes?: AgentStatusType[];
}
export interface ListAgentStatusResponse {
  NextToken?: string;
  AgentStatusSummaryList?: AgentStatusSummary[];
}
export interface ListAnalyticsDataAssociationsRequest {
  InstanceId: string | undefined;
  DataSetId?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListAnalyticsDataAssociationsResponse {
  Results?: AnalyticsDataAssociationResult[];
  NextToken?: string;
}
export interface ListApprovedOriginsRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListApprovedOriginsResponse {
  Origins?: string[];
  NextToken?: string;
}
export declare const LexVersion: {
  readonly V1: "V1";
  readonly V2: "V2";
};
export type LexVersion = (typeof LexVersion)[keyof typeof LexVersion];
export interface ListBotsRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  LexVersion: LexVersion | undefined;
}
export interface LexBotConfig {
  LexBot?: LexBot;
  LexV2Bot?: LexV2Bot;
}
export interface ListBotsResponse {
  LexBots?: LexBotConfig[];
  NextToken?: string;
}
export interface ListContactEvaluationsRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  NextToken?: string;
}
export interface EvaluationSummary {
  EvaluationId: string | undefined;
  EvaluationArn: string | undefined;
  EvaluationFormTitle: string | undefined;
  EvaluationFormId: string | undefined;
  Status: EvaluationStatus | undefined;
  EvaluatorArn: string | undefined;
  Score?: EvaluationScore;
  CreatedTime: Date | undefined;
  LastModifiedTime: Date | undefined;
}
export interface ListContactEvaluationsResponse {
  EvaluationSummaryList: EvaluationSummary[] | undefined;
  NextToken?: string;
}
export interface ListContactFlowModulesRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  ContactFlowModuleState?: ContactFlowModuleState;
}
export interface ContactFlowModuleSummary {
  Id?: string;
  Arn?: string;
  Name?: string;
  State?: ContactFlowModuleState;
}
export interface ListContactFlowModulesResponse {
  ContactFlowModulesSummaryList?: ContactFlowModuleSummary[];
  NextToken?: string;
}
export interface ListContactFlowsRequest {
  InstanceId: string | undefined;
  ContactFlowTypes?: ContactFlowType[];
  NextToken?: string;
  MaxResults?: number;
}
export interface ContactFlowSummary {
  Id?: string;
  Arn?: string;
  Name?: string;
  ContactFlowType?: ContactFlowType;
  ContactFlowState?: ContactFlowState;
}
export interface ListContactFlowsResponse {
  ContactFlowSummaryList?: ContactFlowSummary[];
  NextToken?: string;
}
export interface ListContactReferencesRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  ReferenceTypes: ReferenceType[] | undefined;
  NextToken?: string;
}
export declare const ReferenceStatus: {
  readonly APPROVED: "APPROVED";
  readonly REJECTED: "REJECTED";
};
export type ReferenceStatus =
  (typeof ReferenceStatus)[keyof typeof ReferenceStatus];
export interface AttachmentReference {
  Name?: string;
  Value?: string;
  Status?: ReferenceStatus;
}
export interface DateReference {
  Name?: string;
  Value?: string;
}
export interface EmailReference {
  Name?: string;
  Value?: string;
}
export interface NumberReference {
  Name?: string;
  Value?: string;
}
export interface StringReference {
  Name?: string;
  Value?: string;
}
export interface UrlReference {
  Name?: string;
  Value?: string;
}
export type ReferenceSummary =
  | ReferenceSummary.AttachmentMember
  | ReferenceSummary.DateMember
  | ReferenceSummary.EmailMember
  | ReferenceSummary.NumberMember
  | ReferenceSummary.StringMember
  | ReferenceSummary.UrlMember
  | ReferenceSummary.$UnknownMember;
export declare namespace ReferenceSummary {
  interface UrlMember {
    Url: UrlReference;
    Attachment?: never;
    String?: never;
    Number?: never;
    Date?: never;
    Email?: never;
    $unknown?: never;
  }
  interface AttachmentMember {
    Url?: never;
    Attachment: AttachmentReference;
    String?: never;
    Number?: never;
    Date?: never;
    Email?: never;
    $unknown?: never;
  }
  interface StringMember {
    Url?: never;
    Attachment?: never;
    String: StringReference;
    Number?: never;
    Date?: never;
    Email?: never;
    $unknown?: never;
  }
  interface NumberMember {
    Url?: never;
    Attachment?: never;
    String?: never;
    Number: NumberReference;
    Date?: never;
    Email?: never;
    $unknown?: never;
  }
  interface DateMember {
    Url?: never;
    Attachment?: never;
    String?: never;
    Number?: never;
    Date: DateReference;
    Email?: never;
    $unknown?: never;
  }
  interface EmailMember {
    Url?: never;
    Attachment?: never;
    String?: never;
    Number?: never;
    Date?: never;
    Email: EmailReference;
    $unknown?: never;
  }
  interface $UnknownMember {
    Url?: never;
    Attachment?: never;
    String?: never;
    Number?: never;
    Date?: never;
    Email?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    Url: (value: UrlReference) => T;
    Attachment: (value: AttachmentReference) => T;
    String: (value: StringReference) => T;
    Number: (value: NumberReference) => T;
    Date: (value: DateReference) => T;
    Email: (value: EmailReference) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: ReferenceSummary, visitor: Visitor<T>) => T;
}
export interface ListContactReferencesResponse {
  ReferenceSummaryList?: ReferenceSummary[];
  NextToken?: string;
}
export interface ListDefaultVocabulariesRequest {
  InstanceId: string | undefined;
  LanguageCode?: VocabularyLanguageCode;
  MaxResults?: number;
  NextToken?: string;
}
export interface DefaultVocabulary {
  InstanceId: string | undefined;
  LanguageCode: VocabularyLanguageCode | undefined;
  VocabularyId: string | undefined;
  VocabularyName: string | undefined;
}
export interface ListDefaultVocabulariesResponse {
  DefaultVocabularyList: DefaultVocabulary[] | undefined;
  NextToken?: string;
}
export interface ListEvaluationFormsRequest {
  InstanceId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface EvaluationFormSummary {
  EvaluationFormId: string | undefined;
  EvaluationFormArn: string | undefined;
  Title: string | undefined;
  CreatedTime: Date | undefined;
  CreatedBy: string | undefined;
  LastModifiedTime: Date | undefined;
  LastModifiedBy: string | undefined;
  LastActivatedTime?: Date;
  LastActivatedBy?: string;
  LatestVersion: number | undefined;
  ActiveVersion?: number;
}
export interface ListEvaluationFormsResponse {
  EvaluationFormSummaryList: EvaluationFormSummary[] | undefined;
  NextToken?: string;
}
export interface ListEvaluationFormVersionsRequest {
  InstanceId: string | undefined;
  EvaluationFormId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface EvaluationFormVersionSummary {
  EvaluationFormArn: string | undefined;
  EvaluationFormId: string | undefined;
  EvaluationFormVersion: number | undefined;
  Locked: boolean | undefined;
  Status: EvaluationFormVersionStatus | undefined;
  CreatedTime: Date | undefined;
  CreatedBy: string | undefined;
  LastModifiedTime: Date | undefined;
  LastModifiedBy: string | undefined;
}
export interface ListEvaluationFormVersionsResponse {
  EvaluationFormVersionSummaryList: EvaluationFormVersionSummary[] | undefined;
  NextToken?: string;
}
export interface ListFlowAssociationsRequest {
  InstanceId: string | undefined;
  ResourceType?: ListFlowAssociationResourceType;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListFlowAssociationsResponse {
  FlowAssociationSummaryList?: FlowAssociationSummary[];
  NextToken?: string;
}
export interface ListHoursOfOperationsRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface HoursOfOperationSummary {
  Id?: string;
  Arn?: string;
  Name?: string;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListHoursOfOperationsResponse {
  HoursOfOperationSummaryList?: HoursOfOperationSummary[];
  NextToken?: string;
}
export interface ListInstanceAttributesRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListInstanceAttributesResponse {
  Attributes?: Attribute[];
  NextToken?: string;
}
export interface ListInstancesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface InstanceSummary {
  Id?: string;
  Arn?: string;
  IdentityManagementType?: DirectoryType;
  InstanceAlias?: string;
  CreatedTime?: Date;
  ServiceRole?: string;
  InstanceStatus?: InstanceStatus;
  InboundCallsEnabled?: boolean;
  OutboundCallsEnabled?: boolean;
  InstanceAccessUrl?: string;
}
export interface ListInstancesResponse {
  InstanceSummaryList?: InstanceSummary[];
  NextToken?: string;
}
export interface ListInstanceStorageConfigsRequest {
  InstanceId: string | undefined;
  ResourceType: InstanceStorageResourceType | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListInstanceStorageConfigsResponse {
  StorageConfigs?: InstanceStorageConfig[];
  NextToken?: string;
}
export interface ListIntegrationAssociationsRequest {
  InstanceId: string | undefined;
  IntegrationType?: IntegrationType;
  NextToken?: string;
  MaxResults?: number;
  IntegrationArn?: string;
}
export interface IntegrationAssociationSummary {
  IntegrationAssociationId?: string;
  IntegrationAssociationArn?: string;
  InstanceId?: string;
  IntegrationType?: IntegrationType;
  IntegrationArn?: string;
  SourceApplicationUrl?: string;
  SourceApplicationName?: string;
  SourceType?: SourceType;
}
export interface ListIntegrationAssociationsResponse {
  IntegrationAssociationSummaryList?: IntegrationAssociationSummary[];
  NextToken?: string;
}
export interface ListLambdaFunctionsRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListLambdaFunctionsResponse {
  LambdaFunctions?: string[];
  NextToken?: string;
}
export interface ListLexBotsRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListLexBotsResponse {
  LexBots?: LexBot[];
  NextToken?: string;
}
export interface ListPhoneNumbersRequest {
  InstanceId: string | undefined;
  PhoneNumberTypes?: PhoneNumberType[];
  PhoneNumberCountryCodes?: PhoneNumberCountryCode[];
  NextToken?: string;
  MaxResults?: number;
}
export interface PhoneNumberSummary {
  Id?: string;
  Arn?: string;
  PhoneNumber?: string;
  PhoneNumberType?: PhoneNumberType;
  PhoneNumberCountryCode?: PhoneNumberCountryCode;
}
export interface ListPhoneNumbersResponse {
  PhoneNumberSummaryList?: PhoneNumberSummary[];
  NextToken?: string;
}
export interface ListPhoneNumbersV2Request {
  TargetArn?: string;
  InstanceId?: string;
  MaxResults?: number;
  NextToken?: string;
  PhoneNumberCountryCodes?: PhoneNumberCountryCode[];
  PhoneNumberTypes?: PhoneNumberType[];
  PhoneNumberPrefix?: string;
}
export interface ListPhoneNumbersSummary {
  PhoneNumberId?: string;
  PhoneNumberArn?: string;
  PhoneNumber?: string;
  PhoneNumberCountryCode?: PhoneNumberCountryCode;
  PhoneNumberType?: PhoneNumberType;
  TargetArn?: string;
  InstanceId?: string;
  PhoneNumberDescription?: string;
  SourcePhoneNumberArn?: string;
}
export interface ListPhoneNumbersV2Response {
  NextToken?: string;
  ListPhoneNumbersSummaryList?: ListPhoneNumbersSummary[];
}
export interface ListPredefinedAttributesRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface PredefinedAttributeSummary {
  Name?: string;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListPredefinedAttributesResponse {
  NextToken?: string;
  PredefinedAttributeSummaryList?: PredefinedAttributeSummary[];
}
export interface ListPromptsRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface PromptSummary {
  Id?: string;
  Arn?: string;
  Name?: string;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListPromptsResponse {
  PromptSummaryList?: PromptSummary[];
  NextToken?: string;
}
export interface ListQueueQuickConnectsRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface QuickConnectSummary {
  Id?: string;
  Arn?: string;
  Name?: string;
  QuickConnectType?: QuickConnectType;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListQueueQuickConnectsResponse {
  NextToken?: string;
  QuickConnectSummaryList?: QuickConnectSummary[];
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export declare const QueueType: {
  readonly AGENT: "AGENT";
  readonly STANDARD: "STANDARD";
};
export type QueueType = (typeof QueueType)[keyof typeof QueueType];
export interface ListQueuesRequest {
  InstanceId: string | undefined;
  QueueTypes?: QueueType[];
  NextToken?: string;
  MaxResults?: number;
}
export interface QueueSummary {
  Id?: string;
  Arn?: string;
  Name?: string;
  QueueType?: QueueType;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListQueuesResponse {
  QueueSummaryList?: QueueSummary[];
  NextToken?: string;
}
export interface ListQuickConnectsRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  QuickConnectTypes?: QuickConnectType[];
}
export interface ListQuickConnectsResponse {
  QuickConnectSummaryList?: QuickConnectSummary[];
  NextToken?: string;
}
export declare const RealTimeContactAnalysisOutputType: {
  readonly Raw: "Raw";
  readonly Redacted: "Redacted";
};
export type RealTimeContactAnalysisOutputType =
  (typeof RealTimeContactAnalysisOutputType)[keyof typeof RealTimeContactAnalysisOutputType];
export declare const RealTimeContactAnalysisSegmentType: {
  readonly Attachments: "Attachments";
  readonly Categories: "Categories";
  readonly Event: "Event";
  readonly Issues: "Issues";
  readonly Transcript: "Transcript";
};
export type RealTimeContactAnalysisSegmentType =
  (typeof RealTimeContactAnalysisSegmentType)[keyof typeof RealTimeContactAnalysisSegmentType];
export interface ListRealtimeContactAnalysisSegmentsV2Request {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  OutputType: RealTimeContactAnalysisOutputType | undefined;
  SegmentTypes: RealTimeContactAnalysisSegmentType[] | undefined;
}
export declare const RealTimeContactAnalysisSupportedChannel: {
  readonly CHAT: "CHAT";
  readonly VOICE: "VOICE";
};
export type RealTimeContactAnalysisSupportedChannel =
  (typeof RealTimeContactAnalysisSupportedChannel)[keyof typeof RealTimeContactAnalysisSupportedChannel];
export declare const ArtifactStatus: {
  readonly APPROVED: "APPROVED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly REJECTED: "REJECTED";
};
export type ArtifactStatus =
  (typeof ArtifactStatus)[keyof typeof ArtifactStatus];
export interface RealTimeContactAnalysisAttachment {
  AttachmentName: string | undefined;
  ContentType?: string;
  AttachmentId: string | undefined;
  Status?: ArtifactStatus;
}
export type RealTimeContactAnalysisTimeData =
  | RealTimeContactAnalysisTimeData.AbsoluteTimeMember
  | RealTimeContactAnalysisTimeData.$UnknownMember;
export declare namespace RealTimeContactAnalysisTimeData {
  interface AbsoluteTimeMember {
    AbsoluteTime: Date;
    $unknown?: never;
  }
  interface $UnknownMember {
    AbsoluteTime?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    AbsoluteTime: (value: Date) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: RealTimeContactAnalysisTimeData,
    visitor: Visitor<T>
  ) => T;
}
export interface RealTimeContactAnalysisSegmentAttachments {
  Id: string | undefined;
  ParticipantId: string | undefined;
  ParticipantRole: ParticipantRole | undefined;
  DisplayName?: string;
  Attachments: RealTimeContactAnalysisAttachment[] | undefined;
  Time: RealTimeContactAnalysisTimeData | undefined;
}
export interface RealTimeContactAnalysisCharacterInterval {
  BeginOffsetChar: number | undefined;
  EndOffsetChar: number | undefined;
}
export interface RealTimeContactAnalysisTranscriptItemWithCharacterOffsets {
  Id: string | undefined;
  CharacterOffsets?: RealTimeContactAnalysisCharacterInterval;
}
export interface RealTimeContactAnalysisPointOfInterest {
  TranscriptItems?: RealTimeContactAnalysisTranscriptItemWithCharacterOffsets[];
}
export interface RealTimeContactAnalysisCategoryDetails {
  PointsOfInterest: RealTimeContactAnalysisPointOfInterest[] | undefined;
}
export interface RealTimeContactAnalysisSegmentCategories {
  MatchedDetails:
    | Record<string, RealTimeContactAnalysisCategoryDetails>
    | undefined;
}
export interface RealTimeContactAnalysisSegmentEvent {
  Id: string | undefined;
  ParticipantId?: string;
  ParticipantRole?: ParticipantRole;
  DisplayName?: string;
  EventType: string | undefined;
  Time: RealTimeContactAnalysisTimeData | undefined;
}
export interface RealTimeContactAnalysisTranscriptItemWithContent {
  Content?: string;
  Id: string | undefined;
  CharacterOffsets?: RealTimeContactAnalysisCharacterInterval;
}
export interface RealTimeContactAnalysisIssueDetected {
  TranscriptItems:
    | RealTimeContactAnalysisTranscriptItemWithContent[]
    | undefined;
}
export interface RealTimeContactAnalysisSegmentIssues {
  IssuesDetected: RealTimeContactAnalysisIssueDetected[] | undefined;
}
export interface RealTimeContactAnalysisTranscriptItemRedaction {
  CharacterOffsets?: RealTimeContactAnalysisCharacterInterval[];
}
export declare const RealTimeContactAnalysisSentimentLabel: {
  readonly NEGATIVE: "NEGATIVE";
  readonly NEUTRAL: "NEUTRAL";
  readonly POSITIVE: "POSITIVE";
};
export type RealTimeContactAnalysisSentimentLabel =
  (typeof RealTimeContactAnalysisSentimentLabel)[keyof typeof RealTimeContactAnalysisSentimentLabel];
export interface RealTimeContactAnalysisSegmentTranscript {
  Id: string | undefined;
  ParticipantId: string | undefined;
  ParticipantRole: ParticipantRole | undefined;
  DisplayName?: string;
  Content: string | undefined;
  ContentType?: string;
  Time: RealTimeContactAnalysisTimeData | undefined;
  Redaction?: RealTimeContactAnalysisTranscriptItemRedaction;
  Sentiment?: RealTimeContactAnalysisSentimentLabel;
}
export type RealtimeContactAnalysisSegment =
  | RealtimeContactAnalysisSegment.AttachmentsMember
  | RealtimeContactAnalysisSegment.CategoriesMember
  | RealtimeContactAnalysisSegment.EventMember
  | RealtimeContactAnalysisSegment.IssuesMember
  | RealtimeContactAnalysisSegment.TranscriptMember
  | RealtimeContactAnalysisSegment.$UnknownMember;
export declare namespace RealtimeContactAnalysisSegment {
  interface TranscriptMember {
    Transcript: RealTimeContactAnalysisSegmentTranscript;
    Categories?: never;
    Issues?: never;
    Event?: never;
    Attachments?: never;
    $unknown?: never;
  }
  interface CategoriesMember {
    Transcript?: never;
    Categories: RealTimeContactAnalysisSegmentCategories;
    Issues?: never;
    Event?: never;
    Attachments?: never;
    $unknown?: never;
  }
  interface IssuesMember {
    Transcript?: never;
    Categories?: never;
    Issues: RealTimeContactAnalysisSegmentIssues;
    Event?: never;
    Attachments?: never;
    $unknown?: never;
  }
  interface EventMember {
    Transcript?: never;
    Categories?: never;
    Issues?: never;
    Event: RealTimeContactAnalysisSegmentEvent;
    Attachments?: never;
    $unknown?: never;
  }
  interface AttachmentsMember {
    Transcript?: never;
    Categories?: never;
    Issues?: never;
    Event?: never;
    Attachments: RealTimeContactAnalysisSegmentAttachments;
    $unknown?: never;
  }
  interface $UnknownMember {
    Transcript?: never;
    Categories?: never;
    Issues?: never;
    Event?: never;
    Attachments?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    Transcript: (value: RealTimeContactAnalysisSegmentTranscript) => T;
    Categories: (value: RealTimeContactAnalysisSegmentCategories) => T;
    Issues: (value: RealTimeContactAnalysisSegmentIssues) => T;
    Event: (value: RealTimeContactAnalysisSegmentEvent) => T;
    Attachments: (value: RealTimeContactAnalysisSegmentAttachments) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: RealtimeContactAnalysisSegment,
    visitor: Visitor<T>
  ) => T;
}
export declare const RealTimeContactAnalysisStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
};
export type RealTimeContactAnalysisStatus =
  (typeof RealTimeContactAnalysisStatus)[keyof typeof RealTimeContactAnalysisStatus];
export interface ListRealtimeContactAnalysisSegmentsV2Response {
  Channel: RealTimeContactAnalysisSupportedChannel | undefined;
  Status: RealTimeContactAnalysisStatus | undefined;
  Segments: RealtimeContactAnalysisSegment[] | undefined;
  NextToken?: string;
}
export declare class OutputTypeNotFoundException extends __BaseException {
  readonly name: "OutputTypeNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<OutputTypeNotFoundException, __BaseException>
  );
}
export interface ListRoutingProfileQueuesRequest {
  InstanceId: string | undefined;
  RoutingProfileId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface RoutingProfileQueueConfigSummary {
  QueueId: string | undefined;
  QueueArn: string | undefined;
  QueueName: string | undefined;
  Priority: number | undefined;
  Delay: number | undefined;
  Channel: Channel | undefined;
}
export interface ListRoutingProfileQueuesResponse {
  NextToken?: string;
  RoutingProfileQueueConfigSummaryList?: RoutingProfileQueueConfigSummary[];
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListRoutingProfilesRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface RoutingProfileSummary {
  Id?: string;
  Arn?: string;
  Name?: string;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListRoutingProfilesResponse {
  RoutingProfileSummaryList?: RoutingProfileSummary[];
  NextToken?: string;
}
export interface ListRulesRequest {
  InstanceId: string | undefined;
  PublishStatus?: RulePublishStatus;
  EventSourceName?: EventSourceName;
  MaxResults?: number;
  NextToken?: string;
}
export interface RuleSummary {
  Name: string | undefined;
  RuleId: string | undefined;
  RuleArn: string | undefined;
  EventSourceName: EventSourceName | undefined;
  PublishStatus: RulePublishStatus | undefined;
  ActionSummaries: ActionSummary[] | undefined;
  CreatedTime: Date | undefined;
  LastUpdatedTime: Date | undefined;
}
export interface ListRulesResponse {
  RuleSummaryList: RuleSummary[] | undefined;
  NextToken?: string;
}
export interface ListSecurityKeysRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface SecurityKey {
  AssociationId?: string;
  Key?: string;
  CreationTime?: Date;
}
export interface ListSecurityKeysResponse {
  SecurityKeys?: SecurityKey[];
  NextToken?: string;
}
export interface ListSecurityProfileApplicationsRequest {
  SecurityProfileId: string | undefined;
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListSecurityProfileApplicationsResponse {
  Applications?: Application[];
  NextToken?: string;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListSecurityProfilePermissionsRequest {
  SecurityProfileId: string | undefined;
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListSecurityProfilePermissionsResponse {
  Permissions?: string[];
  NextToken?: string;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListSecurityProfilesRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface SecurityProfileSummary {
  Id?: string;
  Arn?: string;
  Name?: string;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListSecurityProfilesResponse {
  SecurityProfileSummaryList?: SecurityProfileSummary[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Record<string, string>;
}
export interface ListTaskTemplatesRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  Status?: TaskTemplateStatus;
  Name?: string;
}
export interface TaskTemplateMetadata {
  Id?: string;
  Arn?: string;
  Name?: string;
  Description?: string;
  Status?: TaskTemplateStatus;
  LastModifiedTime?: Date;
  CreatedTime?: Date;
}
export interface ListTaskTemplatesResponse {
  TaskTemplates?: TaskTemplateMetadata[];
  NextToken?: string;
}
export interface ListTrafficDistributionGroupsRequest {
  MaxResults?: number;
  NextToken?: string;
  InstanceId?: string;
}
export interface TrafficDistributionGroupSummary {
  Id?: string;
  Arn?: string;
  Name?: string;
  InstanceArn?: string;
  Status?: TrafficDistributionGroupStatus;
  IsDefault?: boolean;
}
export interface ListTrafficDistributionGroupsResponse {
  NextToken?: string;
  TrafficDistributionGroupSummaryList?: TrafficDistributionGroupSummary[];
}
export interface ListTrafficDistributionGroupUsersRequest {
  TrafficDistributionGroupId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface TrafficDistributionGroupUserSummary {
  UserId?: string;
}
export interface ListTrafficDistributionGroupUsersResponse {
  NextToken?: string;
  TrafficDistributionGroupUserSummaryList?: TrafficDistributionGroupUserSummary[];
}
export interface ListUseCasesRequest {
  InstanceId: string | undefined;
  IntegrationAssociationId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface UseCase {
  UseCaseId?: string;
  UseCaseArn?: string;
  UseCaseType?: UseCaseType;
}
export interface ListUseCasesResponse {
  UseCaseSummaryList?: UseCase[];
  NextToken?: string;
}
export interface ListUserHierarchyGroupsRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListUserHierarchyGroupsResponse {
  UserHierarchyGroupSummaryList?: HierarchyGroupSummary[];
  NextToken?: string;
}
export interface ListUserProficienciesRequest {
  InstanceId: string | undefined;
  UserId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListUserProficienciesResponse {
  NextToken?: string;
  UserProficiencyList?: UserProficiency[];
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListUsersRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface UserSummary {
  Id?: string;
  Arn?: string;
  Username?: string;
  LastModifiedTime?: Date;
  LastModifiedRegion?: string;
}
export interface ListUsersResponse {
  UserSummaryList?: UserSummary[];
  NextToken?: string;
}
export interface ListViewsRequest {
  InstanceId: string | undefined;
  Type?: ViewType;
  NextToken?: string;
  MaxResults?: number;
}
export interface ViewSummary {
  Id?: string;
  Arn?: string;
  Name?: string;
  Type?: ViewType;
  Status?: ViewStatus;
  Description?: string;
}
export interface ListViewsResponse {
  ViewsSummaryList?: ViewSummary[];
  NextToken?: string;
}
export interface ListViewVersionsRequest {
  InstanceId: string | undefined;
  ViewId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ViewVersionSummary {
  Id?: string;
  Arn?: string;
  Description?: string;
  Name?: string;
  Type?: ViewType;
  Version?: number;
  VersionDescription?: string;
}
export interface ListViewVersionsResponse {
  ViewVersionSummaryList?: ViewVersionSummary[];
  NextToken?: string;
}
export interface MonitorContactRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  UserId: string | undefined;
  AllowedMonitorCapabilities?: MonitorCapability[];
  ClientToken?: string;
}
export interface MonitorContactResponse {
  ContactId?: string;
  ContactArn?: string;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface PauseContactRequest {
  ContactId: string | undefined;
  InstanceId: string | undefined;
  ContactFlowId?: string;
}
export interface PauseContactResponse {}
export interface PutUserStatusRequest {
  UserId: string | undefined;
  InstanceId: string | undefined;
  AgentStatusId: string | undefined;
}
export interface PutUserStatusResponse {}
export interface ReleasePhoneNumberRequest {
  PhoneNumberId: string | undefined;
  ClientToken?: string;
}
export interface ReplicateInstanceRequest {
  InstanceId: string | undefined;
  ReplicaRegion: string | undefined;
  ClientToken?: string;
  ReplicaAlias: string | undefined;
}
export interface ReplicateInstanceResponse {
  Id?: string;
  Arn?: string;
}
export interface ResumeContactRequest {
  ContactId: string | undefined;
  InstanceId: string | undefined;
  ContactFlowId?: string;
}
export interface ResumeContactResponse {}
export interface ResumeContactRecordingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  InitialContactId: string | undefined;
}
export interface ResumeContactRecordingResponse {}
export interface SearchAvailablePhoneNumbersRequest {
  TargetArn?: string;
  InstanceId?: string;
  PhoneNumberCountryCode: PhoneNumberCountryCode | undefined;
  PhoneNumberType: PhoneNumberType | undefined;
  PhoneNumberPrefix?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface AvailableNumberSummary {
  PhoneNumber?: string;
  PhoneNumberCountryCode?: PhoneNumberCountryCode;
  PhoneNumberType?: PhoneNumberType;
}
export interface SearchAvailablePhoneNumbersResponse {
  NextToken?: string;
  AvailableNumbersList?: AvailableNumberSummary[];
}
export declare const SearchContactsMatchType: {
  readonly MATCH_ALL: "MATCH_ALL";
  readonly MATCH_ANY: "MATCH_ANY";
};
export type SearchContactsMatchType =
  (typeof SearchContactsMatchType)[keyof typeof SearchContactsMatchType];
export interface TranscriptCriteria {
  ParticipantRole: ParticipantRole | undefined;
  SearchText: string[] | undefined;
  MatchType: SearchContactsMatchType | undefined;
}
export interface Transcript {
  Criteria: TranscriptCriteria[] | undefined;
  MatchType?: SearchContactsMatchType;
}
export interface ContactAnalysis {
  Transcript?: Transcript;
}
export interface SearchableContactAttributesCriteria {
  Key: string | undefined;
  Values: string[] | undefined;
}
export interface SearchableContactAttributes {
  Criteria: SearchableContactAttributesCriteria[] | undefined;
  MatchType?: SearchContactsMatchType;
}
export interface SearchCriteria {
  AgentIds?: string[];
  AgentHierarchyGroups?: AgentHierarchyGroups;
  Channels?: Channel[];
  ContactAnalysis?: ContactAnalysis;
  InitiationMethods?: ContactInitiationMethod[];
  QueueIds?: string[];
  SearchableContactAttributes?: SearchableContactAttributes;
}
export declare const SortableFieldName: {
  readonly CHANNEL: "CHANNEL";
  readonly CONNECTED_TO_AGENT_TIMESTAMP: "CONNECTED_TO_AGENT_TIMESTAMP";
  readonly DISCONNECT_TIMESTAMP: "DISCONNECT_TIMESTAMP";
  readonly INITIATION_METHOD: "INITIATION_METHOD";
  readonly INITIATION_TIMESTAMP: "INITIATION_TIMESTAMP";
  readonly SCHEDULED_TIMESTAMP: "SCHEDULED_TIMESTAMP";
};
export type SortableFieldName =
  (typeof SortableFieldName)[keyof typeof SortableFieldName];
export declare const UserFilterSensitiveLog: (obj: User) => any;
export declare const DescribeUserResponseFilterSensitiveLog: (
  obj: DescribeUserResponse
) => any;
export declare const DescribeViewResponseFilterSensitiveLog: (
  obj: DescribeViewResponse
) => any;
export declare const CredentialsFilterSensitiveLog: (obj: Credentials) => any;
export declare const GetFederationTokenResponseFilterSensitiveLog: (
  obj: GetFederationTokenResponse
) => any;
export declare const InstanceSummaryFilterSensitiveLog: (
  obj: InstanceSummary
) => any;
export declare const ListInstancesResponseFilterSensitiveLog: (
  obj: ListInstancesResponse
) => any;
export declare const ViewSummaryFilterSensitiveLog: (obj: ViewSummary) => any;
export declare const ListViewsResponseFilterSensitiveLog: (
  obj: ListViewsResponse
) => any;
export declare const ViewVersionSummaryFilterSensitiveLog: (
  obj: ViewVersionSummary
) => any;
export declare const ListViewVersionsResponseFilterSensitiveLog: (
  obj: ListViewVersionsResponse
) => any;
export declare const ReplicateInstanceRequestFilterSensitiveLog: (
  obj: ReplicateInstanceRequest
) => any;
export declare const TranscriptCriteriaFilterSensitiveLog: (
  obj: TranscriptCriteria
) => any;
export declare const TranscriptFilterSensitiveLog: (obj: Transcript) => any;
export declare const ContactAnalysisFilterSensitiveLog: (
  obj: ContactAnalysis
) => any;
export declare const SearchableContactAttributesCriteriaFilterSensitiveLog: (
  obj: SearchableContactAttributesCriteria
) => any;
export declare const SearchableContactAttributesFilterSensitiveLog: (
  obj: SearchableContactAttributes
) => any;
export declare const SearchCriteriaFilterSensitiveLog: (
  obj: SearchCriteria
) => any;
