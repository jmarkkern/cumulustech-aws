import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ConnectServiceException as __BaseException } from "./ConnectServiceException";
import {
  AgentAvailabilityTimer,
  AgentConfig,
  AgentStatusState,
  AllowedCapabilities,
  Application,
  Channel,
  ContactFlowModuleState,
  ContactFlowState,
  ContactInitiationMethod,
  Evaluation,
  EvaluationAnswerData,
  EvaluationFormQuestion,
  EvaluationFormScoringStrategy,
  EvaluationFormVersionStatus,
  EvaluationNote,
  HoursOfOperation,
  HoursOfOperationConfig,
  InstanceAttributeType,
  InstanceStorageConfig,
  InstanceStorageResourceType,
  MediaConcurrency,
  OutboundCallerConfig,
  PredefinedAttributeValues,
  QuickConnectConfig,
  Reference,
  RehydrationType,
  RoutingProfileQueueConfig,
  RuleAction,
  RulePublishStatus,
  TaskTemplateConstraints,
  TaskTemplateDefaults,
  TaskTemplateField,
  TaskTemplateStatus,
  UserIdentityInfo,
  UserPhoneConfig,
  UserProficiency,
  View,
  ViewInputContent,
  ViewStatus,
  VocabularyLanguageCode,
  VocabularyState,
} from "./models_0";
import {
  PredefinedAttribute,
  Prompt,
  Queue,
  QueueStatus,
  QuickConnect,
  RoutingProfile,
  SearchCriteria,
  SignInConfig,
  SortableFieldName,
  SortOrder,
  TelephonyConfig,
} from "./models_1";
export interface Sort {
  FieldName: SortableFieldName | undefined;
  Order: SortOrder | undefined;
}
export declare const SearchContactsTimeRangeType: {
  readonly CONNECTED_TO_AGENT_TIMESTAMP: "CONNECTED_TO_AGENT_TIMESTAMP";
  readonly DISCONNECT_TIMESTAMP: "DISCONNECT_TIMESTAMP";
  readonly INITIATION_TIMESTAMP: "INITIATION_TIMESTAMP";
  readonly SCHEDULED_TIMESTAMP: "SCHEDULED_TIMESTAMP";
};
export type SearchContactsTimeRangeType =
  (typeof SearchContactsTimeRangeType)[keyof typeof SearchContactsTimeRangeType];
export interface SearchContactsTimeRange {
  Type: SearchContactsTimeRangeType | undefined;
  StartTime: Date | undefined;
  EndTime: Date | undefined;
}
export interface SearchContactsRequest {
  InstanceId: string | undefined;
  TimeRange: SearchContactsTimeRange | undefined;
  SearchCriteria?: SearchCriteria;
  MaxResults?: number;
  NextToken?: string;
  Sort?: Sort;
}
export interface ContactSearchSummaryAgentInfo {
  Id?: string;
  ConnectedToAgentTimestamp?: Date;
}
export interface ContactSearchSummaryQueueInfo {
  Id?: string;
  EnqueueTimestamp?: Date;
}
export interface ContactSearchSummary {
  Arn?: string;
  Id?: string;
  InitialContactId?: string;
  PreviousContactId?: string;
  InitiationMethod?: ContactInitiationMethod;
  Channel?: Channel;
  QueueInfo?: ContactSearchSummaryQueueInfo;
  AgentInfo?: ContactSearchSummaryAgentInfo;
  InitiationTimestamp?: Date;
  DisconnectTimestamp?: Date;
  ScheduledTimestamp?: Date;
}
export interface SearchContactsResponse {
  Contacts: ContactSearchSummary[] | undefined;
  NextToken?: string;
  TotalCount?: number;
}
export declare const StringComparisonType: {
  readonly CONTAINS: "CONTAINS";
  readonly EXACT: "EXACT";
  readonly STARTS_WITH: "STARTS_WITH";
};
export type StringComparisonType =
  (typeof StringComparisonType)[keyof typeof StringComparisonType];
export interface StringCondition {
  FieldName?: string;
  Value?: string;
  ComparisonType?: StringComparisonType;
}
export interface TagCondition {
  TagKey?: string;
  TagValue?: string;
}
export interface ControlPlaneTagFilter {
  OrConditions?: TagCondition[][];
  AndConditions?: TagCondition[];
  TagCondition?: TagCondition;
}
export interface HoursOfOperationSearchFilter {
  TagFilter?: ControlPlaneTagFilter;
}
export interface SearchHoursOfOperationsResponse {
  HoursOfOperations?: HoursOfOperation[];
  NextToken?: string;
  ApproximateTotalCount?: number;
}
export interface SearchPredefinedAttributesResponse {
  PredefinedAttributes?: PredefinedAttribute[];
  NextToken?: string;
  ApproximateTotalCount?: number;
}
export interface PromptSearchFilter {
  TagFilter?: ControlPlaneTagFilter;
}
export interface SearchPromptsResponse {
  Prompts?: Prompt[];
  NextToken?: string;
  ApproximateTotalCount?: number;
}
export declare const SearchableQueueType: {
  readonly STANDARD: "STANDARD";
};
export type SearchableQueueType =
  (typeof SearchableQueueType)[keyof typeof SearchableQueueType];
export interface QueueSearchFilter {
  TagFilter?: ControlPlaneTagFilter;
}
export interface SearchQueuesResponse {
  Queues?: Queue[];
  NextToken?: string;
  ApproximateTotalCount?: number;
}
export interface QuickConnectSearchFilter {
  TagFilter?: ControlPlaneTagFilter;
}
export interface SearchQuickConnectsResponse {
  QuickConnects?: QuickConnect[];
  NextToken?: string;
  ApproximateTotalCount?: number;
}
export declare class MaximumResultReturnedException extends __BaseException {
  readonly name: "MaximumResultReturnedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<MaximumResultReturnedException, __BaseException>
  );
}
export interface TagSearchCondition {
  tagKey?: string;
  tagValue?: string;
  tagKeyComparisonType?: StringComparisonType;
  tagValueComparisonType?: StringComparisonType;
}
export interface ResourceTagsSearchCriteria {
  TagSearchCondition?: TagSearchCondition;
}
export interface SearchResourceTagsRequest {
  InstanceId: string | undefined;
  ResourceTypes?: string[];
  NextToken?: string;
  MaxResults?: number;
  SearchCriteria?: ResourceTagsSearchCriteria;
}
export interface TagSet {
  key?: string;
  value?: string;
}
export interface SearchResourceTagsResponse {
  Tags?: TagSet[];
  NextToken?: string;
}
export interface RoutingProfileSearchFilter {
  TagFilter?: ControlPlaneTagFilter;
}
export interface SearchRoutingProfilesResponse {
  RoutingProfiles?: RoutingProfile[];
  NextToken?: string;
  ApproximateTotalCount?: number;
}
export interface SecurityProfilesSearchFilter {
  TagFilter?: ControlPlaneTagFilter;
}
export interface SecurityProfileSearchSummary {
  Id?: string;
  OrganizationResourceId?: string;
  Arn?: string;
  SecurityProfileName?: string;
  Description?: string;
  Tags?: Record<string, string>;
}
export interface SearchSecurityProfilesResponse {
  SecurityProfiles?: SecurityProfileSearchSummary[];
  NextToken?: string;
  ApproximateTotalCount?: number;
}
export declare const HierarchyGroupMatchType: {
  readonly EXACT: "EXACT";
  readonly WITH_CHILD_GROUPS: "WITH_CHILD_GROUPS";
};
export type HierarchyGroupMatchType =
  (typeof HierarchyGroupMatchType)[keyof typeof HierarchyGroupMatchType];
export interface HierarchyGroupCondition {
  Value?: string;
  HierarchyGroupMatchType?: HierarchyGroupMatchType;
}
export interface AttributeAndCondition {
  TagConditions?: TagCondition[];
  HierarchyGroupCondition?: HierarchyGroupCondition;
}
export interface ControlPlaneUserAttributeFilter {
  OrConditions?: AttributeAndCondition[];
  AndCondition?: AttributeAndCondition;
  TagCondition?: TagCondition;
  HierarchyGroupCondition?: HierarchyGroupCondition;
}
export interface UserSearchFilter {
  TagFilter?: ControlPlaneTagFilter;
  UserAttributeFilter?: ControlPlaneUserAttributeFilter;
}
export interface UserIdentityInfoLite {
  FirstName?: string;
  LastName?: string;
}
export interface UserSearchSummary {
  Arn?: string;
  DirectoryUserId?: string;
  HierarchyGroupId?: string;
  Id?: string;
  IdentityInfo?: UserIdentityInfoLite;
  PhoneConfig?: UserPhoneConfig;
  RoutingProfileId?: string;
  SecurityProfileIds?: string[];
  Tags?: Record<string, string>;
  Username?: string;
}
export interface SearchUsersResponse {
  Users?: UserSearchSummary[];
  NextToken?: string;
  ApproximateTotalCount?: number;
}
export interface SearchVocabulariesRequest {
  InstanceId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
  State?: VocabularyState;
  NameStartsWith?: string;
  LanguageCode?: VocabularyLanguageCode;
}
export interface VocabularySummary {
  Name: string | undefined;
  Id: string | undefined;
  Arn: string | undefined;
  LanguageCode: VocabularyLanguageCode | undefined;
  State: VocabularyState | undefined;
  LastModifiedTime: Date | undefined;
  FailureReason?: string;
}
export interface SearchVocabulariesResponse {
  VocabularySummaryList?: VocabularySummary[];
  NextToken?: string;
}
export declare const ChatEventType: {
  readonly DISCONNECT: "DISCONNECT";
  readonly EVENT: "EVENT";
  readonly MESSAGE: "MESSAGE";
};
export type ChatEventType = (typeof ChatEventType)[keyof typeof ChatEventType];
export interface ChatEvent {
  Type: ChatEventType | undefined;
  ContentType?: string;
  Content?: string;
}
export interface ParticipantDetails {
  DisplayName: string | undefined;
}
export interface ChatStreamingConfiguration {
  StreamingEndpointArn: string | undefined;
}
export interface NewSessionDetails {
  SupportedMessagingContentTypes?: string[];
  ParticipantDetails?: ParticipantDetails;
  Attributes?: Record<string, string>;
  StreamingConfiguration?: ChatStreamingConfiguration;
}
export interface SendChatIntegrationEventRequest {
  SourceId: string | undefined;
  DestinationId: string | undefined;
  Subtype?: string;
  Event: ChatEvent | undefined;
  NewSessionDetails?: NewSessionDetails;
}
export interface SendChatIntegrationEventResponse {
  InitialContactId?: string;
  NewChatCreated?: boolean;
}
export interface ChatMessage {
  ContentType: string | undefined;
  Content: string | undefined;
}
export interface PersistentChat {
  RehydrationType?: RehydrationType;
  SourceContactId?: string;
}
export interface SegmentAttributeValue {
  ValueString?: string;
}
export interface StartChatContactRequest {
  InstanceId: string | undefined;
  ContactFlowId: string | undefined;
  Attributes?: Record<string, string>;
  ParticipantDetails: ParticipantDetails | undefined;
  InitialMessage?: ChatMessage;
  ClientToken?: string;
  ChatDurationInMinutes?: number;
  SupportedMessagingContentTypes?: string[];
  PersistentChat?: PersistentChat;
  RelatedContactId?: string;
  SegmentAttributes?: Record<string, SegmentAttributeValue>;
}
export interface StartChatContactResponse {
  ContactId?: string;
  ParticipantId?: string;
  ParticipantToken?: string;
  ContinuedFromContactId?: string;
}
export interface StartContactEvaluationRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  EvaluationFormId: string | undefined;
  ClientToken?: string;
}
export interface StartContactEvaluationResponse {
  EvaluationId: string | undefined;
  EvaluationArn: string | undefined;
}
export declare const VoiceRecordingTrack: {
  readonly ALL: "ALL";
  readonly FROM_AGENT: "FROM_AGENT";
  readonly TO_AGENT: "TO_AGENT";
};
export type VoiceRecordingTrack =
  (typeof VoiceRecordingTrack)[keyof typeof VoiceRecordingTrack];
export interface VoiceRecordingConfiguration {
  VoiceRecordingTrack?: VoiceRecordingTrack;
}
export interface StartContactRecordingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  InitialContactId: string | undefined;
  VoiceRecordingConfiguration: VoiceRecordingConfiguration | undefined;
}
export interface StartContactRecordingResponse {}
export interface StartContactStreamingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  ChatStreamingConfiguration: ChatStreamingConfiguration | undefined;
  ClientToken?: string;
}
export interface StartContactStreamingResponse {
  StreamingId: string | undefined;
}
export declare class DestinationNotAllowedException extends __BaseException {
  readonly name: "DestinationNotAllowedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<DestinationNotAllowedException, __BaseException>
  );
}
export declare class OutboundContactNotPermittedException extends __BaseException {
  readonly name: "OutboundContactNotPermittedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      OutboundContactNotPermittedException,
      __BaseException
    >
  );
}
export interface AnswerMachineDetectionConfig {
  EnableAnswerMachineDetection?: boolean;
  AwaitAnswerMachinePrompt?: boolean;
}
export declare const TrafficType: {
  readonly CAMPAIGN: "CAMPAIGN";
  readonly GENERAL: "GENERAL";
};
export type TrafficType = (typeof TrafficType)[keyof typeof TrafficType];
export interface StartOutboundVoiceContactRequest {
  Name?: string;
  Description?: string;
  References?: Record<string, Reference>;
  RelatedContactId?: string;
  DestinationPhoneNumber: string | undefined;
  ContactFlowId: string | undefined;
  InstanceId: string | undefined;
  ClientToken?: string;
  SourcePhoneNumber?: string;
  QueueId?: string;
  Attributes?: Record<string, string>;
  AnswerMachineDetectionConfig?: AnswerMachineDetectionConfig;
  CampaignId?: string;
  TrafficType?: TrafficType;
}
export interface StartOutboundVoiceContactResponse {
  ContactId?: string;
}
export interface StartTaskContactRequest {
  InstanceId: string | undefined;
  PreviousContactId?: string;
  ContactFlowId?: string;
  Attributes?: Record<string, string>;
  Name: string | undefined;
  References?: Record<string, Reference>;
  Description?: string;
  ClientToken?: string;
  ScheduledTime?: Date;
  TaskTemplateId?: string;
  QuickConnectId?: string;
  RelatedContactId?: string;
}
export interface StartTaskContactResponse {
  ContactId?: string;
}
export interface StartWebRTCContactRequest {
  Attributes?: Record<string, string>;
  ClientToken?: string;
  ContactFlowId: string | undefined;
  InstanceId: string | undefined;
  AllowedCapabilities?: AllowedCapabilities;
  ParticipantDetails: ParticipantDetails | undefined;
  RelatedContactId?: string;
  References?: Record<string, Reference>;
  Description?: string;
}
export interface Attendee {
  AttendeeId?: string;
  JoinToken?: string;
}
export interface MediaPlacement {
  AudioHostUrl?: string;
  AudioFallbackUrl?: string;
  SignalingUrl?: string;
  TurnControlUrl?: string;
  EventIngestionUrl?: string;
}
export declare const MeetingFeatureStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly UNAVAILABLE: "UNAVAILABLE";
};
export type MeetingFeatureStatus =
  (typeof MeetingFeatureStatus)[keyof typeof MeetingFeatureStatus];
export interface AudioFeatures {
  EchoReduction?: MeetingFeatureStatus;
}
export interface MeetingFeaturesConfiguration {
  Audio?: AudioFeatures;
}
export interface Meeting {
  MediaRegion?: string;
  MediaPlacement?: MediaPlacement;
  MeetingFeatures?: MeetingFeaturesConfiguration;
  MeetingId?: string;
}
export interface ConnectionData {
  Attendee?: Attendee;
  Meeting?: Meeting;
}
export interface StartWebRTCContactResponse {
  ConnectionData?: ConnectionData;
  ContactId?: string;
  ParticipantId?: string;
  ParticipantToken?: string;
}
export declare class ContactNotFoundException extends __BaseException {
  readonly name: "ContactNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ContactNotFoundException, __BaseException>
  );
}
export interface DisconnectReason {
  Code?: string;
}
export interface StopContactRequest {
  ContactId: string | undefined;
  InstanceId: string | undefined;
  DisconnectReason?: DisconnectReason;
}
export interface StopContactResponse {}
export interface StopContactRecordingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  InitialContactId: string | undefined;
}
export interface StopContactRecordingResponse {}
export interface StopContactStreamingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  StreamingId: string | undefined;
}
export interface StopContactStreamingResponse {}
export interface EvaluationAnswerInput {
  Value?: EvaluationAnswerData;
}
export interface SubmitContactEvaluationRequest {
  InstanceId: string | undefined;
  EvaluationId: string | undefined;
  Answers?: Record<string, EvaluationAnswerInput>;
  Notes?: Record<string, EvaluationNote>;
}
export interface SubmitContactEvaluationResponse {
  EvaluationId: string | undefined;
  EvaluationArn: string | undefined;
}
export interface SuspendContactRecordingRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  InitialContactId: string | undefined;
}
export interface SuspendContactRecordingResponse {}
export interface TagContactRequest {
  ContactId: string | undefined;
  InstanceId: string | undefined;
  Tags: Record<string, string> | undefined;
}
export interface TagContactResponse {}
export interface TagResourceRequest {
  resourceArn: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface TransferContactRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  QueueId?: string;
  UserId?: string;
  ContactFlowId: string | undefined;
  ClientToken?: string;
}
export interface TransferContactResponse {
  ContactId?: string;
  ContactArn?: string;
}
export interface UntagContactRequest {
  ContactId: string | undefined;
  InstanceId: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagContactResponse {}
export interface UntagResourceRequest {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UpdateAgentStatusRequest {
  InstanceId: string | undefined;
  AgentStatusId: string | undefined;
  Name?: string;
  Description?: string;
  State?: AgentStatusState;
  DisplayOrder?: number;
  ResetOrderNumber?: boolean;
}
export interface UpdateContactRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  Name?: string;
  Description?: string;
  References?: Record<string, Reference>;
}
export interface UpdateContactResponse {}
export interface UpdateContactAttributesRequest {
  InitialContactId: string | undefined;
  InstanceId: string | undefined;
  Attributes: Record<string, string> | undefined;
}
export interface UpdateContactAttributesResponse {}
export interface UpdateContactEvaluationRequest {
  InstanceId: string | undefined;
  EvaluationId: string | undefined;
  Answers?: Record<string, EvaluationAnswerInput>;
  Notes?: Record<string, EvaluationNote>;
}
export interface UpdateContactEvaluationResponse {
  EvaluationId: string | undefined;
  EvaluationArn: string | undefined;
}
export interface UpdateContactFlowContentRequest {
  InstanceId: string | undefined;
  ContactFlowId: string | undefined;
  Content: string | undefined;
}
export interface UpdateContactFlowContentResponse {}
export interface UpdateContactFlowMetadataRequest {
  InstanceId: string | undefined;
  ContactFlowId: string | undefined;
  Name?: string;
  Description?: string;
  ContactFlowState?: ContactFlowState;
}
export interface UpdateContactFlowMetadataResponse {}
export interface UpdateContactFlowModuleContentRequest {
  InstanceId: string | undefined;
  ContactFlowModuleId: string | undefined;
  Content: string | undefined;
}
export interface UpdateContactFlowModuleContentResponse {}
export interface UpdateContactFlowModuleMetadataRequest {
  InstanceId: string | undefined;
  ContactFlowModuleId: string | undefined;
  Name?: string;
  Description?: string;
  State?: ContactFlowModuleState;
}
export interface UpdateContactFlowModuleMetadataResponse {}
export interface UpdateContactFlowNameRequest {
  InstanceId: string | undefined;
  ContactFlowId: string | undefined;
  Name?: string;
  Description?: string;
}
export interface UpdateContactFlowNameResponse {}
export interface UpdateContactRoutingDataRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  QueueTimeAdjustmentSeconds?: number;
  QueuePriority?: number;
}
export interface UpdateContactRoutingDataResponse {}
export interface UpdateContactScheduleRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  ScheduledTime: Date | undefined;
}
export interface UpdateContactScheduleResponse {}
export interface UpdateEvaluationFormResponse {
  EvaluationFormId: string | undefined;
  EvaluationFormArn: string | undefined;
  EvaluationFormVersion: number | undefined;
}
export interface UpdateHoursOfOperationRequest {
  InstanceId: string | undefined;
  HoursOfOperationId: string | undefined;
  Name?: string;
  Description?: string;
  TimeZone?: string;
  Config?: HoursOfOperationConfig[];
}
export interface UpdateInstanceAttributeRequest {
  InstanceId: string | undefined;
  AttributeType: InstanceAttributeType | undefined;
  Value: string | undefined;
}
export interface UpdateInstanceStorageConfigRequest {
  InstanceId: string | undefined;
  AssociationId: string | undefined;
  ResourceType: InstanceStorageResourceType | undefined;
  StorageConfig: InstanceStorageConfig | undefined;
}
export declare const TimerEligibleParticipantRoles: {
  readonly AGENT: "AGENT";
  readonly CUSTOMER: "CUSTOMER";
};
export type TimerEligibleParticipantRoles =
  (typeof TimerEligibleParticipantRoles)[keyof typeof TimerEligibleParticipantRoles];
export declare const ParticipantTimerType: {
  readonly DISCONNECT_NONCUSTOMER: "DISCONNECT_NONCUSTOMER";
  readonly IDLE: "IDLE";
};
export type ParticipantTimerType =
  (typeof ParticipantTimerType)[keyof typeof ParticipantTimerType];
export declare const ParticipantTimerAction: {
  readonly Unset: "Unset";
};
export type ParticipantTimerAction =
  (typeof ParticipantTimerAction)[keyof typeof ParticipantTimerAction];
export type ParticipantTimerValue =
  | ParticipantTimerValue.ParticipantTimerActionMember
  | ParticipantTimerValue.ParticipantTimerDurationInMinutesMember
  | ParticipantTimerValue.$UnknownMember;
export declare namespace ParticipantTimerValue {
  interface ParticipantTimerActionMember {
    ParticipantTimerAction: ParticipantTimerAction;
    ParticipantTimerDurationInMinutes?: never;
    $unknown?: never;
  }
  interface ParticipantTimerDurationInMinutesMember {
    ParticipantTimerAction?: never;
    ParticipantTimerDurationInMinutes: number;
    $unknown?: never;
  }
  interface $UnknownMember {
    ParticipantTimerAction?: never;
    ParticipantTimerDurationInMinutes?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    ParticipantTimerAction: (value: ParticipantTimerAction) => T;
    ParticipantTimerDurationInMinutes: (value: number) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: ParticipantTimerValue, visitor: Visitor<T>) => T;
}
export interface ParticipantTimerConfiguration {
  ParticipantRole: TimerEligibleParticipantRoles | undefined;
  TimerType: ParticipantTimerType | undefined;
  TimerValue: ParticipantTimerValue | undefined;
}
export interface ChatParticipantRoleConfig {
  ParticipantTimerConfigList: ParticipantTimerConfiguration[] | undefined;
}
export type UpdateParticipantRoleConfigChannelInfo =
  | UpdateParticipantRoleConfigChannelInfo.ChatMember
  | UpdateParticipantRoleConfigChannelInfo.$UnknownMember;
export declare namespace UpdateParticipantRoleConfigChannelInfo {
  interface ChatMember {
    Chat: ChatParticipantRoleConfig;
    $unknown?: never;
  }
  interface $UnknownMember {
    Chat?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    Chat: (value: ChatParticipantRoleConfig) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: UpdateParticipantRoleConfigChannelInfo,
    visitor: Visitor<T>
  ) => T;
}
export interface UpdateParticipantRoleConfigRequest {
  InstanceId: string | undefined;
  ContactId: string | undefined;
  ChannelConfiguration: UpdateParticipantRoleConfigChannelInfo | undefined;
}
export interface UpdateParticipantRoleConfigResponse {}
export interface UpdatePhoneNumberRequest {
  PhoneNumberId: string | undefined;
  TargetArn?: string;
  InstanceId?: string;
  ClientToken?: string;
}
export interface UpdatePhoneNumberResponse {
  PhoneNumberId?: string;
  PhoneNumberArn?: string;
}
export interface UpdatePhoneNumberMetadataRequest {
  PhoneNumberId: string | undefined;
  PhoneNumberDescription?: string;
  ClientToken?: string;
}
export interface UpdatePredefinedAttributeRequest {
  InstanceId: string | undefined;
  Name: string | undefined;
  Values?: PredefinedAttributeValues;
}
export interface UpdatePromptRequest {
  InstanceId: string | undefined;
  PromptId: string | undefined;
  Name?: string;
  Description?: string;
  S3Uri?: string;
}
export interface UpdatePromptResponse {
  PromptARN?: string;
  PromptId?: string;
}
export interface UpdateQueueHoursOfOperationRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  HoursOfOperationId: string | undefined;
}
export interface UpdateQueueMaxContactsRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  MaxContacts?: number;
}
export interface UpdateQueueNameRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  Name?: string;
  Description?: string;
}
export interface UpdateQueueOutboundCallerConfigRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  OutboundCallerConfig: OutboundCallerConfig | undefined;
}
export interface UpdateQueueStatusRequest {
  InstanceId: string | undefined;
  QueueId: string | undefined;
  Status: QueueStatus | undefined;
}
export interface UpdateQuickConnectConfigRequest {
  InstanceId: string | undefined;
  QuickConnectId: string | undefined;
  QuickConnectConfig: QuickConnectConfig | undefined;
}
export interface UpdateQuickConnectNameRequest {
  InstanceId: string | undefined;
  QuickConnectId: string | undefined;
  Name?: string;
  Description?: string;
}
export interface UpdateRoutingProfileAgentAvailabilityTimerRequest {
  InstanceId: string | undefined;
  RoutingProfileId: string | undefined;
  AgentAvailabilityTimer: AgentAvailabilityTimer | undefined;
}
export interface UpdateRoutingProfileConcurrencyRequest {
  InstanceId: string | undefined;
  RoutingProfileId: string | undefined;
  MediaConcurrencies: MediaConcurrency[] | undefined;
}
export interface UpdateRoutingProfileDefaultOutboundQueueRequest {
  InstanceId: string | undefined;
  RoutingProfileId: string | undefined;
  DefaultOutboundQueueId: string | undefined;
}
export interface UpdateRoutingProfileNameRequest {
  InstanceId: string | undefined;
  RoutingProfileId: string | undefined;
  Name?: string;
  Description?: string;
}
export interface UpdateRoutingProfileQueuesRequest {
  InstanceId: string | undefined;
  RoutingProfileId: string | undefined;
  QueueConfigs: RoutingProfileQueueConfig[] | undefined;
}
export interface UpdateRuleRequest {
  RuleId: string | undefined;
  InstanceId: string | undefined;
  Name: string | undefined;
  Function: string | undefined;
  Actions: RuleAction[] | undefined;
  PublishStatus: RulePublishStatus | undefined;
}
export interface UpdateSecurityProfileRequest {
  Description?: string;
  Permissions?: string[];
  SecurityProfileId: string | undefined;
  InstanceId: string | undefined;
  AllowedAccessControlTags?: Record<string, string>;
  TagRestrictedResources?: string[];
  Applications?: Application[];
  HierarchyRestrictedResources?: string[];
  AllowedAccessControlHierarchyGroupId?: string;
}
export interface UpdateTaskTemplateRequest {
  TaskTemplateId: string | undefined;
  InstanceId: string | undefined;
  Name?: string;
  Description?: string;
  ContactFlowId?: string;
  Constraints?: TaskTemplateConstraints;
  Defaults?: TaskTemplateDefaults;
  Status?: TaskTemplateStatus;
  Fields?: TaskTemplateField[];
}
export interface UpdateTaskTemplateResponse {
  InstanceId?: string;
  Id?: string;
  Arn?: string;
  Name?: string;
  Description?: string;
  ContactFlowId?: string;
  Constraints?: TaskTemplateConstraints;
  Defaults?: TaskTemplateDefaults;
  Fields?: TaskTemplateField[];
  Status?: TaskTemplateStatus;
  LastModifiedTime?: Date;
  CreatedTime?: Date;
}
export interface UpdateTrafficDistributionRequest {
  Id: string | undefined;
  TelephonyConfig?: TelephonyConfig;
  SignInConfig?: SignInConfig;
  AgentConfig?: AgentConfig;
}
export interface UpdateTrafficDistributionResponse {}
export interface UpdateUserHierarchyRequest {
  HierarchyGroupId?: string;
  UserId: string | undefined;
  InstanceId: string | undefined;
}
export interface UpdateUserHierarchyGroupNameRequest {
  Name: string | undefined;
  HierarchyGroupId: string | undefined;
  InstanceId: string | undefined;
}
export interface HierarchyLevelUpdate {
  Name: string | undefined;
}
export interface HierarchyStructureUpdate {
  LevelOne?: HierarchyLevelUpdate;
  LevelTwo?: HierarchyLevelUpdate;
  LevelThree?: HierarchyLevelUpdate;
  LevelFour?: HierarchyLevelUpdate;
  LevelFive?: HierarchyLevelUpdate;
}
export interface UpdateUserHierarchyStructureRequest {
  HierarchyStructure: HierarchyStructureUpdate | undefined;
  InstanceId: string | undefined;
}
export interface UpdateUserIdentityInfoRequest {
  IdentityInfo: UserIdentityInfo | undefined;
  UserId: string | undefined;
  InstanceId: string | undefined;
}
export interface UpdateUserPhoneConfigRequest {
  PhoneConfig: UserPhoneConfig | undefined;
  UserId: string | undefined;
  InstanceId: string | undefined;
}
export interface UpdateUserProficienciesRequest {
  InstanceId: string | undefined;
  UserId: string | undefined;
  UserProficiencies: UserProficiency[] | undefined;
}
export interface UpdateUserRoutingProfileRequest {
  RoutingProfileId: string | undefined;
  UserId: string | undefined;
  InstanceId: string | undefined;
}
export interface UpdateUserSecurityProfilesRequest {
  SecurityProfileIds: string[] | undefined;
  UserId: string | undefined;
  InstanceId: string | undefined;
}
export interface UpdateViewContentRequest {
  InstanceId: string | undefined;
  ViewId: string | undefined;
  Status: ViewStatus | undefined;
  Content: ViewInputContent | undefined;
}
export interface UpdateViewContentResponse {
  View?: View;
}
export interface UpdateViewMetadataRequest {
  InstanceId: string | undefined;
  ViewId: string | undefined;
  Name?: string;
  Description?: string;
}
export interface UpdateViewMetadataResponse {}
export type EvaluationFormItem =
  | EvaluationFormItem.QuestionMember
  | EvaluationFormItem.SectionMember
  | EvaluationFormItem.$UnknownMember;
export declare namespace EvaluationFormItem {
  interface SectionMember {
    Section: EvaluationFormSection;
    Question?: never;
    $unknown?: never;
  }
  interface QuestionMember {
    Section?: never;
    Question: EvaluationFormQuestion;
    $unknown?: never;
  }
  interface $UnknownMember {
    Section?: never;
    Question?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    Section: (value: EvaluationFormSection) => T;
    Question: (value: EvaluationFormQuestion) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: EvaluationFormItem, visitor: Visitor<T>) => T;
}
export interface EvaluationFormSection {
  Title: string | undefined;
  RefId: string | undefined;
  Instructions?: string;
  Items: EvaluationFormItem[] | undefined;
  Weight?: number;
}
export interface CreateEvaluationFormRequest {
  InstanceId: string | undefined;
  Title: string | undefined;
  Description?: string;
  Items: EvaluationFormItem[] | undefined;
  ScoringStrategy?: EvaluationFormScoringStrategy;
  ClientToken?: string;
}
export interface EvaluationForm {
  EvaluationFormId: string | undefined;
  EvaluationFormVersion: number | undefined;
  Locked: boolean | undefined;
  EvaluationFormArn: string | undefined;
  Title: string | undefined;
  Description?: string;
  Status: EvaluationFormVersionStatus | undefined;
  Items: EvaluationFormItem[] | undefined;
  ScoringStrategy?: EvaluationFormScoringStrategy;
  CreatedTime: Date | undefined;
  CreatedBy: string | undefined;
  LastModifiedTime: Date | undefined;
  LastModifiedBy: string | undefined;
  Tags?: Record<string, string>;
}
export interface EvaluationFormContent {
  EvaluationFormVersion: number | undefined;
  EvaluationFormId: string | undefined;
  EvaluationFormArn: string | undefined;
  Title: string | undefined;
  Description?: string;
  Items: EvaluationFormItem[] | undefined;
  ScoringStrategy?: EvaluationFormScoringStrategy;
}
export interface HoursOfOperationSearchCriteria {
  OrConditions?: HoursOfOperationSearchCriteria[];
  AndConditions?: HoursOfOperationSearchCriteria[];
  StringCondition?: StringCondition;
}
export interface PredefinedAttributeSearchCriteria {
  OrConditions?: PredefinedAttributeSearchCriteria[];
  AndConditions?: PredefinedAttributeSearchCriteria[];
  StringCondition?: StringCondition;
}
export interface PromptSearchCriteria {
  OrConditions?: PromptSearchCriteria[];
  AndConditions?: PromptSearchCriteria[];
  StringCondition?: StringCondition;
}
export interface QueueSearchCriteria {
  OrConditions?: QueueSearchCriteria[];
  AndConditions?: QueueSearchCriteria[];
  StringCondition?: StringCondition;
  QueueTypeCondition?: SearchableQueueType;
}
export interface QuickConnectSearchCriteria {
  OrConditions?: QuickConnectSearchCriteria[];
  AndConditions?: QuickConnectSearchCriteria[];
  StringCondition?: StringCondition;
}
export interface RoutingProfileSearchCriteria {
  OrConditions?: RoutingProfileSearchCriteria[];
  AndConditions?: RoutingProfileSearchCriteria[];
  StringCondition?: StringCondition;
}
export interface SecurityProfileSearchCriteria {
  OrConditions?: SecurityProfileSearchCriteria[];
  AndConditions?: SecurityProfileSearchCriteria[];
  StringCondition?: StringCondition;
}
export interface UpdateEvaluationFormRequest {
  InstanceId: string | undefined;
  EvaluationFormId: string | undefined;
  EvaluationFormVersion: number | undefined;
  CreateNewVersion?: boolean;
  Title: string | undefined;
  Description?: string;
  Items: EvaluationFormItem[] | undefined;
  ScoringStrategy?: EvaluationFormScoringStrategy;
  ClientToken?: string;
}
export interface UserSearchCriteria {
  OrConditions?: UserSearchCriteria[];
  AndConditions?: UserSearchCriteria[];
  StringCondition?: StringCondition;
  HierarchyGroupCondition?: HierarchyGroupCondition;
}
export interface DescribeContactEvaluationResponse {
  Evaluation: Evaluation | undefined;
  EvaluationForm: EvaluationFormContent | undefined;
}
export interface DescribeEvaluationFormResponse {
  EvaluationForm: EvaluationForm | undefined;
}
export interface SearchHoursOfOperationsRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  SearchFilter?: HoursOfOperationSearchFilter;
  SearchCriteria?: HoursOfOperationSearchCriteria;
}
export interface SearchPredefinedAttributesRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  SearchCriteria?: PredefinedAttributeSearchCriteria;
}
export interface SearchPromptsRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  SearchFilter?: PromptSearchFilter;
  SearchCriteria?: PromptSearchCriteria;
}
export interface SearchQueuesRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  SearchFilter?: QueueSearchFilter;
  SearchCriteria?: QueueSearchCriteria;
}
export interface SearchQuickConnectsRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  SearchFilter?: QuickConnectSearchFilter;
  SearchCriteria?: QuickConnectSearchCriteria;
}
export interface SearchRoutingProfilesRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  SearchFilter?: RoutingProfileSearchFilter;
  SearchCriteria?: RoutingProfileSearchCriteria;
}
export interface SearchSecurityProfilesRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  SearchCriteria?: SecurityProfileSearchCriteria;
  SearchFilter?: SecurityProfilesSearchFilter;
}
export interface SearchUsersRequest {
  InstanceId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  SearchFilter?: UserSearchFilter;
  SearchCriteria?: UserSearchCriteria;
}
export declare const SearchContactsRequestFilterSensitiveLog: (
  obj: SearchContactsRequest
) => any;
export declare const UserIdentityInfoLiteFilterSensitiveLog: (
  obj: UserIdentityInfoLite
) => any;
export declare const UserSearchSummaryFilterSensitiveLog: (
  obj: UserSearchSummary
) => any;
export declare const SearchUsersResponseFilterSensitiveLog: (
  obj: SearchUsersResponse
) => any;
export declare const StartOutboundVoiceContactRequestFilterSensitiveLog: (
  obj: StartOutboundVoiceContactRequest
) => any;
export declare const StartTaskContactRequestFilterSensitiveLog: (
  obj: StartTaskContactRequest
) => any;
export declare const StartWebRTCContactRequestFilterSensitiveLog: (
  obj: StartWebRTCContactRequest
) => any;
export declare const AttendeeFilterSensitiveLog: (obj: Attendee) => any;
export declare const ConnectionDataFilterSensitiveLog: (
  obj: ConnectionData
) => any;
export declare const StartWebRTCContactResponseFilterSensitiveLog: (
  obj: StartWebRTCContactResponse
) => any;
export declare const UpdateContactRequestFilterSensitiveLog: (
  obj: UpdateContactRequest
) => any;
export declare const UpdateUserIdentityInfoRequestFilterSensitiveLog: (
  obj: UpdateUserIdentityInfoRequest
) => any;
export declare const UpdateViewContentRequestFilterSensitiveLog: (
  obj: UpdateViewContentRequest
) => any;
export declare const UpdateViewContentResponseFilterSensitiveLog: (
  obj: UpdateViewContentResponse
) => any;
export declare const UpdateViewMetadataRequestFilterSensitiveLog: (
  obj: UpdateViewMetadataRequest
) => any;
